{
  "analysis": {
    "directoryStructure": {
      "components": {
        "exists": true,
        "files": [
          {
            "name": "AppointmentForm.tsx",
            "path": "src\\components\\AppointmentForm.tsx",
            "extension": ".tsx",
            "size": 8848,
            "lines": 264
          },
          {
            "name": "CTASection.tsx",
            "path": "src\\components\\CTASection.tsx",
            "extension": ".tsx",
            "size": 3835,
            "lines": 125
          },
          {
            "name": "EnhancedImage.tsx",
            "path": "src\\components\\EnhancedImage.tsx",
            "extension": ".tsx",
            "size": 9718,
            "lines": 324
          },
          {
            "name": "ErrorBoundary.tsx",
            "path": "src\\components\\ErrorBoundary.tsx",
            "extension": ".tsx",
            "size": 7370,
            "lines": 217
          },
          {
            "name": "Footer.tsx",
            "path": "src\\components\\Footer.tsx",
            "extension": ".tsx",
            "size": 12984,
            "lines": 345
          },
          {
            "name": "HeroSection.tsx",
            "path": "src\\components\\HeroSection.tsx",
            "extension": ".tsx",
            "size": 8587,
            "lines": 229
          },
          {
            "name": "IndependentReviewsSection.tsx",
            "path": "src\\components\\IndependentReviewsSection.tsx",
            "extension": ".tsx",
            "size": 7823,
            "lines": 210
          },
          {
            "name": "LanguageSelector.tsx",
            "path": "src\\components\\LanguageSelector.tsx",
            "extension": ".tsx",
            "size": 2971,
            "lines": 93
          },
          {
            "name": "LanguageWrapper.tsx",
            "path": "src\\components\\LanguageWrapper.tsx",
            "extension": ".tsx",
            "size": 750,
            "lines": 26
          },
          {
            "name": "Layout.tsx",
            "path": "src\\components\\Layout.tsx",
            "extension": ".tsx",
            "size": 1057,
            "lines": 36
          },
          {
            "name": "Loading.tsx",
            "path": "src\\components\\Loading.tsx",
            "extension": ".tsx",
            "size": 5898,
            "lines": 256
          },
          {
            "name": "Navbar.tsx",
            "path": "src\\components\\Navbar.tsx",
            "extension": ".tsx",
            "size": 17046,
            "lines": 416
          },
          {
            "name": "NetworkStatus.tsx",
            "path": "src\\components\\NetworkStatus.tsx",
            "extension": ".tsx",
            "size": 7738,
            "lines": 250
          },
          {
            "name": "OptimizedImage.tsx",
            "path": "src\\components\\OptimizedImage.tsx",
            "extension": ".tsx",
            "size": 2443,
            "lines": 99
          },
          {
            "name": "PageHeader.tsx",
            "path": "src\\components\\PageHeader.tsx",
            "extension": ".tsx",
            "size": 4256,
            "lines": 134
          },
          {
            "name": "ProcedureCard.tsx",
            "path": "src\\components\\ProcedureCard.tsx",
            "extension": ".tsx",
            "size": 5410,
            "lines": 138
          },
          {
            "name": "SafeImage.tsx",
            "path": "src\\components\\SafeImage.tsx",
            "extension": ".tsx",
            "size": 2693,
            "lines": 93
          },
          {
            "name": "ScreenReaderAnnouncer.tsx",
            "path": "src\\components\\ScreenReaderAnnouncer.tsx",
            "extension": ".tsx",
            "size": 2011,
            "lines": 69
          },
          {
            "name": "SEOHead.tsx",
            "path": "src\\components\\SEOHead.tsx",
            "extension": ".tsx",
            "size": 7932,
            "lines": 256
          },
          {
            "name": "SkipLink.tsx",
            "path": "src\\components\\SkipLink.tsx",
            "extension": ".tsx",
            "size": 1151,
            "lines": 46
          },
          {
            "name": "StandardPageLayout.tsx",
            "path": "src\\components\\StandardPageLayout.tsx",
            "extension": ".tsx",
            "size": 3286,
            "lines": 124
          },
          {
            "name": "TestimonialsSection.tsx",
            "path": "src\\components\\TestimonialsSection.tsx",
            "extension": ".tsx",
            "size": 7485,
            "lines": 190
          },
          {
            "name": "ThemeToggle.tsx",
            "path": "src\\components\\ThemeToggle.tsx",
            "extension": ".tsx",
            "size": 2164,
            "lines": 67
          }
        ],
        "subdirectories": [
          {
            "name": "layout",
            "path": "src\\components\\layout",
            "structure": {
              "exists": true,
              "files": [
                {
                  "name": "index.ts",
                  "path": "src\\components\\layout\\index.ts",
                  "extension": ".ts",
                  "size": 819,
                  "lines": 37
                },
                {
                  "name": "LayoutVariants.tsx",
                  "path": "src\\components\\layout\\LayoutVariants.tsx",
                  "extension": ".tsx",
                  "size": 3164,
                  "lines": 121
                },
                {
                  "name": "StandardSection.tsx",
                  "path": "src\\components\\layout\\StandardSection.tsx",
                  "extension": ".tsx",
                  "size": 2679,
                  "lines": 108
                },
                {
                  "name": "types.ts",
                  "path": "src\\components\\layout\\types.ts",
                  "extension": ".ts",
                  "size": 1176,
                  "lines": 44
                }
              ],
              "subdirectories": [],
              "totalFiles": 4,
              "totalSize": 7838
            }
          },
          {
            "name": "medical-conditions",
            "path": "src\\components\\medical-conditions",
            "structure": {
              "exists": true,
              "files": [
                {
                  "name": "ConditionHero.tsx",
                  "path": "src\\components\\medical-conditions\\ConditionHero.tsx",
                  "extension": ".tsx",
                  "size": 4093,
                  "lines": 118
                },
                {
                  "name": "ConditionOverview.tsx",
                  "path": "src\\components\\medical-conditions\\ConditionOverview.tsx",
                  "extension": ".tsx",
                  "size": 2442,
                  "lines": 74
                },
                {
                  "name": "DegenerationProcess.tsx",
                  "path": "src\\components\\medical-conditions\\DegenerationProcess.tsx",
                  "extension": ".tsx",
                  "size": 7961,
                  "lines": 194
                },
                {
                  "name": "index.ts",
                  "path": "src\\components\\medical-conditions\\index.ts",
                  "extension": ".ts",
                  "size": 388,
                  "lines": 12
                },
                {
                  "name": "types.ts",
                  "path": "src\\components\\medical-conditions\\types.ts",
                  "extension": ".ts",
                  "size": 4316,
                  "lines": 191
                }
              ],
              "subdirectories": [
                {
                  "name": "arthrosis",
                  "path": "src\\components\\medical-conditions\\arthrosis",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "ArthrosisTypesSection.tsx",
                        "path": "src\\components\\medical-conditions\\arthrosis\\ArthrosisTypesSection.tsx",
                        "extension": ".tsx",
                        "size": 12434,
                        "lines": 271
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 1,
                    "totalSize": 12434
                  }
                },
                {
                  "name": "facet-arthropathy",
                  "path": "src\\components\\medical-conditions\\facet-arthropathy",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "FacetJointAnatomySection.tsx",
                        "path": "src\\components\\medical-conditions\\facet-arthropathy\\FacetJointAnatomySection.tsx",
                        "extension": ".tsx",
                        "size": 14013,
                        "lines": 277
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 1,
                    "totalSize": 14013
                  }
                },
                {
                  "name": "shared",
                  "path": "src\\components\\medical-conditions\\shared",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "ConditionHeroSection.tsx",
                        "path": "src\\components\\medical-conditions\\shared\\ConditionHeroSection.tsx",
                        "extension": ".tsx",
                        "size": 4272,
                        "lines": 128
                      },
                      {
                        "name": "ConditionOverviewSection.tsx",
                        "path": "src\\components\\medical-conditions\\shared\\ConditionOverviewSection.tsx",
                        "extension": ".tsx",
                        "size": 2836,
                        "lines": 110
                      },
                      {
                        "name": "ConditionQuickFacts.tsx",
                        "path": "src\\components\\medical-conditions\\shared\\ConditionQuickFacts.tsx",
                        "extension": ".tsx",
                        "size": 2492,
                        "lines": 81
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 3,
                    "totalSize": 9600
                  }
                }
              ],
              "totalFiles": 5,
              "totalSize": 19200
            }
          },
          {
            "name": "ui",
            "path": "src\\components\\ui",
            "structure": {
              "exists": true,
              "files": [
                {
                  "name": "accordion.tsx",
                  "path": "src\\components\\ui\\accordion.tsx",
                  "extension": ".tsx",
                  "size": 2605,
                  "lines": 81
                },
                {
                  "name": "alert-dialog.tsx",
                  "path": "src\\components\\ui\\alert-dialog.tsx",
                  "extension": ".tsx",
                  "size": 4558,
                  "lines": 140
                },
                {
                  "name": "alert.tsx",
                  "path": "src\\components\\ui\\alert.tsx",
                  "extension": ".tsx",
                  "size": 1643,
                  "lines": 61
                },
                {
                  "name": "aspect-ratio.tsx",
                  "path": "src\\components\\ui\\aspect-ratio.tsx",
                  "extension": ".tsx",
                  "size": 146,
                  "lines": 6
                },
                {
                  "name": "avatar.tsx",
                  "path": "src\\components\\ui\\avatar.tsx",
                  "extension": ".tsx",
                  "size": 1451,
                  "lines": 49
                },
                {
                  "name": "badge.tsx",
                  "path": "src\\components\\ui\\badge.tsx",
                  "extension": ".tsx",
                  "size": 1186,
                  "lines": 38
                },
                {
                  "name": "breadcrumb.tsx",
                  "path": "src\\components\\ui\\breadcrumb.tsx",
                  "extension": ".tsx",
                  "size": 2815,
                  "lines": 116
                },
                {
                  "name": "button.tsx",
                  "path": "src\\components\\ui\\button.tsx",
                  "extension": ".tsx",
                  "size": 3104,
                  "lines": 73
                },
                {
                  "name": "calendar.tsx",
                  "path": "src\\components\\ui\\calendar.tsx",
                  "extension": ".tsx",
                  "size": 3095,
                  "lines": 74
                },
                {
                  "name": "card.tsx",
                  "path": "src\\components\\ui\\card.tsx",
                  "extension": ".tsx",
                  "size": 3137,
                  "lines": 135
                },
                {
                  "name": "carousel.tsx",
                  "path": "src\\components\\ui\\carousel.tsx",
                  "extension": ".tsx",
                  "size": 6531,
                  "lines": 254
                },
                {
                  "name": "chart.tsx",
                  "path": "src\\components\\ui\\chart.tsx",
                  "extension": ".tsx",
                  "size": 3321,
                  "lines": 144
                },
                {
                  "name": "checkbox.tsx",
                  "path": "src\\components\\ui\\checkbox.tsx",
                  "extension": ".tsx",
                  "size": 2947,
                  "lines": 88
                },
                {
                  "name": "collapsible.tsx",
                  "path": "src\\components\\ui\\collapsible.tsx",
                  "extension": ".tsx",
                  "size": 325,
                  "lines": 10
                },
                {
                  "name": "command.tsx",
                  "path": "src\\components\\ui\\command.tsx",
                  "extension": ".tsx",
                  "size": 5035,
                  "lines": 153
                },
                {
                  "name": "context-menu.tsx",
                  "path": "src\\components\\ui\\context-menu.tsx",
                  "extension": ".tsx",
                  "size": 7441,
                  "lines": 198
                },
                {
                  "name": "dialog.tsx",
                  "path": "src\\components\\ui\\dialog.tsx",
                  "extension": ".tsx",
                  "size": 4755,
                  "lines": 147
                },
                {
                  "name": "drawer.tsx",
                  "path": "src\\components\\ui\\drawer.tsx",
                  "extension": ".tsx",
                  "size": 3118,
                  "lines": 117
                },
                {
                  "name": "dropdown-menu.tsx",
                  "path": "src\\components\\ui\\dropdown-menu.tsx",
                  "extension": ".tsx",
                  "size": 7501,
                  "lines": 199
                },
                {
                  "name": "form.tsx",
                  "path": "src\\components\\ui\\form.tsx",
                  "extension": ".tsx",
                  "size": 4386,
                  "lines": 178
                },
                {
                  "name": "hover-card.tsx",
                  "path": "src\\components\\ui\\hover-card.tsx",
                  "extension": ".tsx",
                  "size": 1212,
                  "lines": 27
                },
                {
                  "name": "input-otp.tsx",
                  "path": "src\\components\\ui\\input-otp.tsx",
                  "extension": ".tsx",
                  "size": 2264,
                  "lines": 70
                },
                {
                  "name": "input.tsx",
                  "path": "src\\components\\ui\\input.tsx",
                  "extension": ".tsx",
                  "size": 2287,
                  "lines": 66
                },
                {
                  "name": "label.tsx",
                  "path": "src\\components\\ui\\label.tsx",
                  "extension": ".tsx",
                  "size": 755,
                  "lines": 26
                },
                {
                  "name": "menubar.tsx",
                  "path": "src\\components\\ui\\menubar.tsx",
                  "extension": ".tsx",
                  "size": 8209,
                  "lines": 230
                },
                {
                  "name": "navigation-menu.tsx",
                  "path": "src\\components\\ui\\navigation-menu.tsx",
                  "extension": ".tsx",
                  "size": 5191,
                  "lines": 130
                },
                {
                  "name": "pagination.tsx",
                  "path": "src\\components\\ui\\pagination.tsx",
                  "extension": ".tsx",
                  "size": 2880,
                  "lines": 117
                },
                {
                  "name": "popover.tsx",
                  "path": "src\\components\\ui\\popover.tsx",
                  "extension": ".tsx",
                  "size": 1594,
                  "lines": 38
                },
                {
                  "name": "progress.tsx",
                  "path": "src\\components\\ui\\progress.tsx",
                  "extension": ".tsx",
                  "size": 806,
                  "lines": 27
                },
                {
                  "name": "radio-group.tsx",
                  "path": "src\\components\\ui\\radio-group.tsx",
                  "extension": ".tsx",
                  "size": 1515,
                  "lines": 43
                },
                {
                  "name": "resizable.tsx",
                  "path": "src\\components\\ui\\resizable.tsx",
                  "extension": ".tsx",
                  "size": 1782,
                  "lines": 45
                },
                {
                  "name": "scroll-area.tsx",
                  "path": "src\\components\\ui\\scroll-area.tsx",
                  "extension": ".tsx",
                  "size": 1689,
                  "lines": 46
                },
                {
                  "name": "select.tsx",
                  "path": "src\\components\\ui\\select.tsx",
                  "extension": ".tsx",
                  "size": 7523,
                  "lines": 215
                },
                {
                  "name": "separator.tsx",
                  "path": "src\\components\\ui\\separator.tsx",
                  "extension": ".tsx",
                  "size": 739,
                  "lines": 24
                },
                {
                  "name": "sheet.tsx",
                  "path": "src\\components\\ui\\sheet.tsx",
                  "extension": ".tsx",
                  "size": 4390,
                  "lines": 131
                },
                {
                  "name": "skeleton.tsx",
                  "path": "src\\components\\ui\\skeleton.tsx",
                  "extension": ".tsx",
                  "size": 303,
                  "lines": 16
                },
                {
                  "name": "slider.tsx",
                  "path": "src\\components\\ui\\slider.tsx",
                  "extension": ".tsx",
                  "size": 1101,
                  "lines": 27
                },
                {
                  "name": "sonner.tsx",
                  "path": "src\\components\\ui\\sonner.tsx",
                  "extension": ".tsx",
                  "size": 2256,
                  "lines": 65
                },
                {
                  "name": "switch.tsx",
                  "path": "src\\components\\ui\\switch.tsx",
                  "extension": ".tsx",
                  "size": 1193,
                  "lines": 28
                },
                {
                  "name": "table.tsx",
                  "path": "src\\components\\ui\\table.tsx",
                  "extension": ".tsx",
                  "size": 3193,
                  "lines": 129
                },
                {
                  "name": "tabs.tsx",
                  "path": "src\\components\\ui\\tabs.tsx",
                  "extension": ".tsx",
                  "size": 2499,
                  "lines": 74
                },
                {
                  "name": "textarea.tsx",
                  "path": "src\\components\\ui\\textarea.tsx",
                  "extension": ".tsx",
                  "size": 2217,
                  "lines": 66
                },
                {
                  "name": "toggle-group.tsx",
                  "path": "src\\components\\ui\\toggle-group.tsx",
                  "extension": ".tsx",
                  "size": 1837,
                  "lines": 61
                },
                {
                  "name": "toggle.tsx",
                  "path": "src\\components\\ui\\toggle.tsx",
                  "extension": ".tsx",
                  "size": 1472,
                  "lines": 44
                },
                {
                  "name": "tooltip.tsx",
                  "path": "src\\components\\ui\\tooltip.tsx",
                  "extension": ".tsx",
                  "size": 1171,
                  "lines": 29
                },
                {
                  "name": "use-toast.ts",
                  "path": "src\\components\\ui\\use-toast.ts",
                  "extension": ".ts",
                  "size": 52,
                  "lines": 3
                }
              ],
              "subdirectories": [],
              "totalFiles": 46,
              "totalSize": 129230
            }
          }
        ],
        "totalFiles": 23,
        "totalSize": 133456
      },
      "pages": {
        "exists": true,
        "files": [
          {
            "name": "AppointmentBooking.tsx",
            "path": "src\\pages\\AppointmentBooking.tsx",
            "extension": ".tsx",
            "size": 41852,
            "lines": 891
          },
          {
            "name": "Appointments.tsx",
            "path": "src\\pages\\Appointments.tsx",
            "extension": ".tsx",
            "size": 39050,
            "lines": 824
          },
          {
            "name": "ConsultingRooms.tsx",
            "path": "src\\pages\\ConsultingRooms.tsx",
            "extension": ".tsx",
            "size": 22314,
            "lines": 337
          },
          {
            "name": "Contact.tsx",
            "path": "src\\pages\\Contact.tsx",
            "extension": ".tsx",
            "size": 35994,
            "lines": 760
          },
          {
            "name": "Expertise.tsx",
            "path": "src\\pages\\Expertise.tsx",
            "extension": ".tsx",
            "size": 25680,
            "lines": 543
          },
          {
            "name": "Faq.tsx",
            "path": "src\\pages\\Faq.tsx",
            "extension": ".tsx",
            "size": 39452,
            "lines": 452
          },
          {
            "name": "Gallery.tsx",
            "path": "src\\pages\\Gallery.tsx",
            "extension": ".tsx",
            "size": 11431,
            "lines": 294
          },
          {
            "name": "GPResources.tsx",
            "path": "src\\pages\\GPResources.tsx",
            "extension": ".tsx",
            "size": 7309,
            "lines": 173
          },
          {
            "name": "Index.tsx",
            "path": "src\\pages\\Index.tsx",
            "extension": ".tsx",
            "size": 45569,
            "lines": 777
          },
          {
            "name": "Locations.tsx",
            "path": "src\\pages\\Locations.tsx",
            "extension": ".tsx",
            "size": 13356,
            "lines": 327
          },
          {
            "name": "Medicolegal.tsx",
            "path": "src\\pages\\Medicolegal.tsx",
            "extension": ".tsx",
            "size": 40381,
            "lines": 637
          },
          {
            "name": "NotFound.tsx",
            "path": "src\\pages\\NotFound.tsx",
            "extension": ".tsx",
            "size": 1444,
            "lines": 43
          },
          {
            "name": "PatientResources.tsx",
            "path": "src\\pages\\PatientResources.tsx",
            "extension": ".tsx",
            "size": 24998,
            "lines": 511
          },
          {
            "name": "PrivacyPolicy.tsx",
            "path": "src\\pages\\PrivacyPolicy.tsx",
            "extension": ".tsx",
            "size": 14199,
            "lines": 263
          },
          {
            "name": "Specialties.tsx",
            "path": "src\\pages\\Specialties.tsx",
            "extension": ".tsx",
            "size": 13242,
            "lines": 286
          },
          {
            "name": "TermsConditions.tsx",
            "path": "src\\pages\\TermsConditions.tsx",
            "extension": ".tsx",
            "size": 7749,
            "lines": 145
          },
          {
            "name": "TestImages.tsx",
            "path": "src\\pages\\TestImages.tsx",
            "extension": ".tsx",
            "size": 538,
            "lines": 19
          }
        ],
        "subdirectories": [
          {
            "name": "expertise",
            "path": "src\\pages\\expertise",
            "structure": {
              "exists": true,
              "files": [
                {
                  "name": "CervicalDiscReplacement.tsx",
                  "path": "src\\pages\\expertise\\CervicalDiscReplacement.tsx",
                  "extension": ".tsx",
                  "size": 27335,
                  "lines": 422
                },
                {
                  "name": "ImageGuidedSurgery.tsx",
                  "path": "src\\pages\\expertise\\ImageGuidedSurgery.tsx",
                  "extension": ".tsx",
                  "size": 26226,
                  "lines": 374
                },
                {
                  "name": "LumbarDiscReplacement.tsx",
                  "path": "src\\pages\\expertise\\LumbarDiscReplacement.tsx",
                  "extension": ".tsx",
                  "size": 27019,
                  "lines": 421
                },
                {
                  "name": "RoboticSpineSurgery.tsx",
                  "path": "src\\pages\\expertise\\RoboticSpineSurgery.tsx",
                  "extension": ".tsx",
                  "size": 29923,
                  "lines": 436
                }
              ],
              "subdirectories": [],
              "totalFiles": 4,
              "totalSize": 110503
            }
          },
          {
            "name": "gp-resources",
            "path": "src\\pages\\gp-resources",
            "structure": {
              "exists": true,
              "files": [
                {
                  "name": "CareCoordination.tsx",
                  "path": "src\\pages\\gp-resources\\CareCoordination.tsx",
                  "extension": ".tsx",
                  "size": 33940,
                  "lines": 464
                },
                {
                  "name": "Diagnostics.tsx",
                  "path": "src\\pages\\gp-resources\\Diagnostics.tsx",
                  "extension": ".tsx",
                  "size": 31584,
                  "lines": 495
                },
                {
                  "name": "Emergencies.tsx",
                  "path": "src\\pages\\gp-resources\\Emergencies.tsx",
                  "extension": ".tsx",
                  "size": 25103,
                  "lines": 367
                },
                {
                  "name": "ReferralProtocols.tsx",
                  "path": "src\\pages\\gp-resources\\ReferralProtocols.tsx",
                  "extension": ".tsx",
                  "size": 20094,
                  "lines": 323
                }
              ],
              "subdirectories": [],
              "totalFiles": 4,
              "totalSize": 110721
            }
          },
          {
            "name": "locations",
            "path": "src\\pages\\locations",
            "structure": {
              "exists": true,
              "files": [
                {
                  "name": "LocationDetail.tsx",
                  "path": "src\\pages\\locations\\LocationDetail.tsx",
                  "extension": ".tsx",
                  "size": 24350,
                  "lines": 406
                }
              ],
              "subdirectories": [
                {
                  "name": "bundoora",
                  "path": "src\\pages\\locations\\bundoora",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "index.tsx",
                        "path": "src\\pages\\locations\\bundoora\\index.tsx",
                        "extension": ".tsx",
                        "size": 39394,
                        "lines": 618
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 1,
                    "totalSize": 39394
                  }
                },
                {
                  "name": "dandenong",
                  "path": "src\\pages\\locations\\dandenong",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "index.tsx",
                        "path": "src\\pages\\locations\\dandenong\\index.tsx",
                        "extension": ".tsx",
                        "size": 47391,
                        "lines": 644
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 1,
                    "totalSize": 47391
                  }
                },
                {
                  "name": "frankston",
                  "path": "src\\pages\\locations\\frankston",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "index.tsx",
                        "path": "src\\pages\\locations\\frankston\\index.tsx",
                        "extension": ".tsx",
                        "size": 62434,
                        "lines": 865
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 1,
                    "totalSize": 62434
                  }
                },
                {
                  "name": "heidelberg",
                  "path": "src\\pages\\locations\\heidelberg",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "index.tsx",
                        "path": "src\\pages\\locations\\heidelberg\\index.tsx",
                        "extension": ".tsx",
                        "size": 53369,
                        "lines": 733
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 1,
                    "totalSize": 53369
                  }
                },
                {
                  "name": "langwarrin",
                  "path": "src\\pages\\locations\\langwarrin",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "index.tsx",
                        "path": "src\\pages\\locations\\langwarrin\\index.tsx",
                        "extension": ".tsx",
                        "size": 45731,
                        "lines": 623
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 1,
                    "totalSize": 45731
                  }
                },
                {
                  "name": "moonee-ponds",
                  "path": "src\\pages\\locations\\moonee-ponds",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "index.tsx",
                        "path": "src\\pages\\locations\\moonee-ponds\\index.tsx",
                        "extension": ".tsx",
                        "size": 53774,
                        "lines": 719
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 1,
                    "totalSize": 53774
                  }
                },
                {
                  "name": "mornington",
                  "path": "src\\pages\\locations\\mornington",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "index.tsx",
                        "path": "src\\pages\\locations\\mornington\\index.tsx",
                        "extension": ".tsx",
                        "size": 55856,
                        "lines": 710
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 1,
                    "totalSize": 55856
                  }
                },
                {
                  "name": "sunbury",
                  "path": "src\\pages\\locations\\sunbury",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "index.tsx",
                        "path": "src\\pages\\locations\\sunbury\\index.tsx",
                        "extension": ".tsx",
                        "size": 54128,
                        "lines": 731
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 1,
                    "totalSize": 54128
                  }
                },
                {
                  "name": "surrey-hills",
                  "path": "src\\pages\\locations\\surrey-hills",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "index.tsx",
                        "path": "src\\pages\\locations\\surrey-hills\\index.tsx",
                        "extension": ".tsx",
                        "size": 61952,
                        "lines": 903
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 1,
                    "totalSize": 61952
                  }
                },
                {
                  "name": "wantirna",
                  "path": "src\\pages\\locations\\wantirna",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "index.tsx",
                        "path": "src\\pages\\locations\\wantirna\\index.tsx",
                        "extension": ".tsx",
                        "size": 42763,
                        "lines": 607
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 1,
                    "totalSize": 42763
                  }
                },
                {
                  "name": "werribee",
                  "path": "src\\pages\\locations\\werribee",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "index.tsx",
                        "path": "src\\pages\\locations\\werribee\\index.tsx",
                        "extension": ".tsx",
                        "size": 53304,
                        "lines": 731
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 1,
                    "totalSize": 53304
                  }
                }
              ],
              "totalFiles": 1,
              "totalSize": 24350
            }
          },
          {
            "name": "patient-resources",
            "path": "src\\pages\\patient-resources",
            "structure": {
              "exists": true,
              "files": [
                {
                  "name": "AgeSpecificSpineRecommendations.tsx",
                  "path": "src\\pages\\patient-resources\\AgeSpecificSpineRecommendations.tsx",
                  "extension": ".tsx",
                  "size": 26753,
                  "lines": 485
                },
                {
                  "name": "AssessmentTools.tsx",
                  "path": "src\\pages\\patient-resources\\AssessmentTools.tsx",
                  "extension": ".tsx",
                  "size": 19984,
                  "lines": 385
                },
                {
                  "name": "CervicalSpineExercises.tsx",
                  "path": "src\\pages\\patient-resources\\CervicalSpineExercises.tsx",
                  "extension": ".tsx",
                  "size": 33101,
                  "lines": 619
                },
                {
                  "name": "CervicalSpineInjury.tsx",
                  "path": "src\\pages\\patient-resources\\CervicalSpineInjury.tsx",
                  "extension": ".tsx",
                  "size": 25317,
                  "lines": 465
                },
                {
                  "name": "ConditionInformation.tsx",
                  "path": "src\\pages\\patient-resources\\ConditionInformation.tsx",
                  "extension": ".tsx",
                  "size": 13129,
                  "lines": 269
                },
                {
                  "name": "ExerciseLibrary.tsx",
                  "path": "src\\pages\\patient-resources\\ExerciseLibrary.tsx",
                  "extension": ".tsx",
                  "size": 26910,
                  "lines": 586
                },
                {
                  "name": "ExercisePainMedRisks.tsx",
                  "path": "src\\pages\\patient-resources\\ExercisePainMedRisks.tsx",
                  "extension": ".tsx",
                  "size": 25966,
                  "lines": 470
                },
                {
                  "name": "IndividualSpineHealthProgramme.tsx",
                  "path": "src\\pages\\patient-resources\\IndividualSpineHealthProgramme.tsx",
                  "extension": ".tsx",
                  "size": 16832,
                  "lines": 330
                },
                {
                  "name": "LifestyleModifications.tsx",
                  "path": "src\\pages\\patient-resources\\LifestyleModifications.tsx",
                  "extension": ".tsx",
                  "size": 53538,
                  "lines": 869
                },
                {
                  "name": "PatientDashboard.tsx",
                  "path": "src\\pages\\patient-resources\\PatientDashboard.tsx",
                  "extension": ".tsx",
                  "size": 26533,
                  "lines": 508
                },
                {
                  "name": "SpineAndBrainHealth.tsx",
                  "path": "src\\pages\\patient-resources\\SpineAndBrainHealth.tsx",
                  "extension": ".tsx",
                  "size": 18261,
                  "lines": 331
                },
                {
                  "name": "SpineConditionsLibrary.tsx",
                  "path": "src\\pages\\patient-resources\\SpineConditionsLibrary.tsx",
                  "extension": ".tsx",
                  "size": 44563,
                  "lines": 774
                },
                {
                  "name": "SpineHealthApp.tsx",
                  "path": "src\\pages\\patient-resources\\SpineHealthApp.tsx",
                  "extension": ".tsx",
                  "size": 19233,
                  "lines": 372
                },
                {
                  "name": "SpineSafeExercises.tsx",
                  "path": "src\\pages\\patient-resources\\SpineSafeExercises.tsx",
                  "extension": ".tsx",
                  "size": 33283,
                  "lines": 630
                },
                {
                  "name": "YouthfulSpine.tsx",
                  "path": "src\\pages\\patient-resources\\YouthfulSpine.tsx",
                  "extension": ".tsx",
                  "size": 35095,
                  "lines": 562
                }
              ],
              "subdirectories": [
                {
                  "name": "conditions",
                  "path": "src\\pages\\patient-resources\\conditions",
                  "structure": {
                    "exists": true,
                    "files": [
                      {
                        "name": "Arthrosis.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\Arthrosis.tsx",
                        "extension": ".tsx",
                        "size": 69230,
                        "lines": 1461
                      },
                      {
                        "name": "Discopathy.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\Discopathy.tsx",
                        "extension": ".tsx",
                        "size": 2697,
                        "lines": 65
                      },
                      {
                        "name": "FacetArthropathy.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\FacetArthropathy.tsx",
                        "extension": ".tsx",
                        "size": 70972,
                        "lines": 1478
                      },
                      {
                        "name": "FacetArthropathyRefactored.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\FacetArthropathyRefactored.tsx",
                        "extension": ".tsx",
                        "size": 17730,
                        "lines": 378
                      },
                      {
                        "name": "HerniatedDisc.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\HerniatedDisc.tsx",
                        "extension": ".tsx",
                        "size": 75039,
                        "lines": 1604
                      },
                      {
                        "name": "OccipitalNeuralgia.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\OccipitalNeuralgia.tsx",
                        "extension": ".tsx",
                        "size": 82097,
                        "lines": 1664
                      },
                      {
                        "name": "ParsDefects.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\ParsDefects.tsx",
                        "extension": ".tsx",
                        "size": 83154,
                        "lines": 1682
                      },
                      {
                        "name": "PiriformisSyndrome.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\PiriformisSyndrome.tsx",
                        "extension": ".tsx",
                        "size": 83161,
                        "lines": 1678
                      },
                      {
                        "name": "Radiculopathy.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\Radiculopathy.tsx",
                        "extension": ".tsx",
                        "size": 89071,
                        "lines": 1842
                      },
                      {
                        "name": "SacroiliacArthropathy.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\SacroiliacArthropathy.tsx",
                        "extension": ".tsx",
                        "size": 82976,
                        "lines": 1681
                      },
                      {
                        "name": "Sciatica.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\Sciatica.tsx",
                        "extension": ".tsx",
                        "size": 83653,
                        "lines": 1742
                      },
                      {
                        "name": "SpinalStenosis.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\SpinalStenosis.tsx",
                        "extension": ".tsx",
                        "size": 84529,
                        "lines": 1772
                      },
                      {
                        "name": "Spondylolisthesis.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\Spondylolisthesis.tsx",
                        "extension": ".tsx",
                        "size": 86480,
                        "lines": 1751
                      },
                      {
                        "name": "Spondylosis.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\Spondylosis.tsx",
                        "extension": ".tsx",
                        "size": 81088,
                        "lines": 1678
                      },
                      {
                        "name": "ThoracicOutletSyndrome.tsx",
                        "path": "src\\pages\\patient-resources\\conditions\\ThoracicOutletSyndrome.tsx",
                        "extension": ".tsx",
                        "size": 82498,
                        "lines": 1683
                      }
                    ],
                    "subdirectories": [],
                    "totalFiles": 15,
                    "totalSize": 1074375
                  }
                }
              ],
              "totalFiles": 15,
              "totalSize": 418498
            }
          }
        ],
        "totalFiles": 17,
        "totalSize": 384558
      },
      "hooks": {
        "exists": true,
        "files": [
          {
            "name": "use-mobile.ts",
            "path": "src\\hooks\\use-mobile.ts",
            "extension": ".ts",
            "size": 565,
            "lines": 20
          },
          {
            "name": "useSEO.ts",
            "path": "src\\hooks\\useSEO.ts",
            "extension": ".ts",
            "size": 4692,
            "lines": 135
          }
        ],
        "subdirectories": [],
        "totalFiles": 2,
        "totalSize": 5257
      },
      "contexts": {
        "exists": true,
        "files": [
          {
            "name": "DeviceContext.tsx",
            "path": "src\\contexts\\DeviceContext.tsx",
            "extension": ".tsx",
            "size": 5753,
            "lines": 202
          },
          {
            "name": "LanguageContext.tsx",
            "path": "src\\contexts\\LanguageContext.tsx",
            "extension": ".tsx",
            "size": 4694,
            "lines": 128
          }
        ],
        "subdirectories": [],
        "totalFiles": 2,
        "totalSize": 10447
      },
      "lib": {
        "exists": true,
        "files": [
          {
            "name": "accessibility.ts",
            "path": "src\\lib\\accessibility.ts",
            "extension": ".ts",
            "size": 6432,
            "lines": 177
          },
          {
            "name": "env-validation.ts",
            "path": "src\\lib\\env-validation.ts",
            "extension": ".ts",
            "size": 9294,
            "lines": 273
          },
          {
            "name": "error-handling.ts",
            "path": "src\\lib\\error-handling.ts",
            "extension": ".ts",
            "size": 11027,
            "lines": 372
          },
          {
            "name": "mobile-optimization.ts",
            "path": "src\\lib\\mobile-optimization.ts",
            "extension": ".ts",
            "size": 12437,
            "lines": 404
          },
          {
            "name": "performance.ts",
            "path": "src\\lib\\performance.ts",
            "extension": ".ts",
            "size": 9460,
            "lines": 342
          },
          {
            "name": "security.ts",
            "path": "src\\lib\\security.ts",
            "extension": ".ts",
            "size": 14219,
            "lines": 516
          },
          {
            "name": "seo.ts",
            "path": "src\\lib\\seo.ts",
            "extension": ".ts",
            "size": 19421,
            "lines": 532
          },
          {
            "name": "sitemap.ts",
            "path": "src\\lib\\sitemap.ts",
            "extension": ".ts",
            "size": 6771,
            "lines": 282
          },
          {
            "name": "test-utils.tsx",
            "path": "src\\lib\\test-utils.tsx",
            "extension": ".tsx",
            "size": 9663,
            "lines": 355
          },
          {
            "name": "type-safety.ts",
            "path": "src\\lib\\type-safety.ts",
            "extension": ".ts",
            "size": 6704,
            "lines": 288
          },
          {
            "name": "utils.ts",
            "path": "src\\lib\\utils.ts",
            "extension": ".ts",
            "size": 1371,
            "lines": 47
          }
        ],
        "subdirectories": [],
        "totalFiles": 11,
        "totalSize": 106799
      },
      "types": {
        "exists": true,
        "files": [
          {
            "name": "motion.ts",
            "path": "src\\types\\motion.ts",
            "extension": ".ts",
            "size": 3969,
            "lines": 157
          },
          {
            "name": "procedures.ts",
            "path": "src\\types\\procedures.ts",
            "extension": ".ts",
            "size": 9201,
            "lines": 304
          },
          {
            "name": "seo.ts",
            "path": "src\\types\\seo.ts",
            "extension": ".ts",
            "size": 1031,
            "lines": 50
          },
          {
            "name": "translations.ts",
            "path": "src\\types\\translations.ts",
            "extension": ".ts",
            "size": 9239,
            "lines": 413
          }
        ],
        "subdirectories": [],
        "totalFiles": 4,
        "totalSize": 23440
      },
      "routes": {
        "exists": true,
        "files": [
          {
            "name": "route-definitions.ts",
            "path": "src\\routes\\route-definitions.ts",
            "extension": ".ts",
            "size": 10508,
            "lines": 281
          },
          {
            "name": "route-loader.tsx",
            "path": "src\\routes\\route-loader.tsx",
            "extension": ".tsx",
            "size": 6483,
            "lines": 219
          },
          {
            "name": "routeConfig.tsx",
            "path": "src\\routes\\routeConfig.tsx",
            "extension": ".tsx",
            "size": 9577,
            "lines": 168
          }
        ],
        "subdirectories": [],
        "totalFiles": 3,
        "totalSize": 26568
      },
      "locales": {
        "exists": true,
        "files": [
          {
            "name": "en.ts",
            "path": "src\\locales\\en.ts",
            "extension": ".ts",
            "size": 109698,
            "lines": 1733
          },
          {
            "name": "zh.ts",
            "path": "src\\locales\\zh.ts",
            "extension": ".ts",
            "size": 84877,
            "lines": 1924
          },
          {
            "name": "zh.ts.backup",
            "path": "src\\locales\\zh.ts.backup",
            "extension": ".backup",
            "size": 1919,
            "lines": 36
          },
          {
            "name": "zh.ts.backup-2025-06-19T11-15-31-429Z",
            "path": "src\\locales\\zh.ts.backup-2025-06-19T11-15-31-429Z",
            "extension": ".backup-2025-06-19T11-15-31-429Z",
            "size": 29012,
            "lines": 592
          },
          {
            "name": "zh.ts.backup-complete-2025-06-19T11-36-26-700Z",
            "path": "src\\locales\\zh.ts.backup-complete-2025-06-19T11-36-26-700Z",
            "extension": ".backup-complete-2025-06-19T11-36-26-700Z",
            "size": 64850,
            "lines": 1556
          },
          {
            "name": "zh.ts.backup-comprehensive-2025-06-19T21-59-06-899Z",
            "path": "src\\locales\\zh.ts.backup-comprehensive-2025-06-19T21-59-06-899Z",
            "extension": ".backup-comprehensive-2025-06-19T21-59-06-899Z",
            "size": 87551,
            "lines": 1967
          },
          {
            "name": "zh.ts.backup-expertise-2025-06-19T12-16-14-995Z",
            "path": "src\\locales\\zh.ts.backup-expertise-2025-06-19T12-16-14-995Z",
            "extension": ".backup-expertise-2025-06-19T12-16-14-995Z",
            "size": 84810,
            "lines": 1831
          },
          {
            "name": "zh.ts.backup-final-2025-06-19T11-55-26-361Z",
            "path": "src\\locales\\zh.ts.backup-final-2025-06-19T11-55-26-361Z",
            "extension": ".backup-final-2025-06-19T11-55-26-361Z",
            "size": 212669,
            "lines": 3005
          },
          {
            "name": "zh.ts.backup-fixed-2025-06-19T11-56-45-430Z",
            "path": "src\\locales\\zh.ts.backup-fixed-2025-06-19T11-56-45-430Z",
            "extension": ".backup-fixed-2025-06-19T11-56-45-430Z",
            "size": 214283,
            "lines": 3027
          },
          {
            "name": "zh.ts.backup-location-2025-06-19T11-29-42-124Z",
            "path": "src\\locales\\zh.ts.backup-location-2025-06-19T11-29-42-124Z",
            "extension": ".backup-location-2025-06-19T11-29-42-124Z",
            "size": 42489,
            "lines": 1002
          },
          {
            "name": "zh.ts.backup-medical-2025-06-19T11-31-34-767Z",
            "path": "src\\locales\\zh.ts.backup-medical-2025-06-19T11-31-34-767Z",
            "extension": ".backup-medical-2025-06-19T11-31-34-767Z",
            "size": 48174,
            "lines": 1129
          },
          {
            "name": "zh.ts.backup-page-2025-06-19T11-27-19-898Z",
            "path": "src\\locales\\zh.ts.backup-page-2025-06-19T11-27-19-898Z",
            "extension": ".backup-page-2025-06-19T11-27-19-898Z",
            "size": 35095,
            "lines": 807
          },
          {
            "name": "zh.ts.backup-page-2025-06-19T11-28-10-630Z",
            "path": "src\\locales\\zh.ts.backup-page-2025-06-19T11-28-10-630Z",
            "extension": ".backup-page-2025-06-19T11-28-10-630Z",
            "size": 40570,
            "lines": 935
          },
          {
            "name": "zh.ts.backup-patient-2025-06-19T11-33-16-237Z",
            "path": "src\\locales\\zh.ts.backup-patient-2025-06-19T11-33-16-237Z",
            "extension": ".backup-patient-2025-06-19T11-33-16-237Z",
            "size": 56907,
            "lines": 1360
          },
          {
            "name": "zh.ts.backup-structure-2025-06-19T12-08-31-867Z",
            "path": "src\\locales\\zh.ts.backup-structure-2025-06-19T12-08-31-867Z",
            "extension": ".backup-structure-2025-06-19T12-08-31-867Z",
            "size": 216380,
            "lines": 3027
          },
          {
            "name": "zh.ts.backup2",
            "path": "src\\locales\\zh.ts.backup2",
            "extension": ".backup2",
            "size": 7237,
            "lines": 213
          },
          {
            "name": "zh.ts.broken-2025-06-19T11-37-41-561Z",
            "path": "src\\locales\\zh.ts.broken-2025-06-19T11-37-41-561Z",
            "extension": ".broken-2025-06-19T11-37-41-561Z",
            "size": 212653,
            "lines": 3009
          }
        ],
        "subdirectories": [],
        "totalFiles": 17,
        "totalSize": 1549174
      },
      "data": {
        "exists": true,
        "files": [],
        "subdirectories": [
          {
            "name": "conditions",
            "path": "src\\data\\conditions",
            "structure": {
              "exists": true,
              "files": [
                {
                  "name": "discopathy.ts",
                  "path": "src\\data\\conditions\\discopathy.ts",
                  "extension": ".ts",
                  "size": 11444,
                  "lines": 358
                },
                {
                  "name": "facet-arthropathy.ts",
                  "path": "src\\data\\conditions\\facet-arthropathy.ts",
                  "extension": ".ts",
                  "size": 11274,
                  "lines": 350
                }
              ],
              "subdirectories": [],
              "totalFiles": 2,
              "totalSize": 22718
            }
          }
        ],
        "totalFiles": 0,
        "totalSize": 0
      }
    },
    "components": {
      "AppointmentForm": {
        "path": "src\\components\\AppointmentForm.tsx",
        "name": "AppointmentForm",
        "size": 8848,
        "lines": 264,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useState, useRef, useEffect } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Check, CalendarIcon, Users } from 'lucide-react'"
          },
          {
            "source": "date-fns",
            "statement": "import { format } from 'date-fns'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/calendar",
            "statement": "import { Calendar } from '@/components/ui/calendar'"
          },
          {
            "source": "@/components/ui/popover",
            "statement": "import {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\""
          },
          {
            "source": "@/components/ui/select",
            "statement": "import {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\""
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useState",
          "useRef",
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": true,
        "complexity": {
          "lines": 264,
          "conditionals": 3,
          "loops": 2,
          "functions": 10,
          "score": 284
        },
        "issues": []
      },
      "CTASection": {
        "path": "src\\components\\CTASection.tsx",
        "name": "CTASection",
        "size": 3835,
        "lines": 125,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [
          {
            "interface": "CTASectionProps",
            "properties": [
              "className?: string;\r\n  title?: string;\r\n  description?: string;\r\n  primaryButtonText?: string;\r\n  primaryButtonLink?: string;\r\n  secondaryButtonText?: string;\r\n  secondaryButtonLink?: string;\r\n  bgClass?: string;\r\n  id?: string;"
            ]
          }
        ],
        "hooks": [
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 125,
          "conditionals": 9,
          "loops": 0,
          "functions": 10,
          "score": 153
        },
        "issues": []
      },
      "EnhancedImage": {
        "path": "src\\components\\EnhancedImage.tsx",
        "name": "EnhancedImage",
        "size": 9714,
        "lines": 324,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useState, useRef, useCallback, useEffect } from 'react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [
          "MedicalImage",
          "HeroImage"
        ],
        "props": [
          {
            "interface": "EnhancedImageProps",
            "properties": [
              "src: string;\r\n  alt: string;\r\n  className?: string;\r\n  width?: number;\r\n  height?: number;\r\n  priority?: boolean;\r\n  placeholder?: 'blur' | 'empty' | 'skeleton';\r\n  blurDataURL?: string;\r\n  sizes?: string;\r\n  quality?: number;\r\n  onLoad?: () => void;\r\n  onError?: () => void;\r\n  loading?: 'lazy' | 'eager';\r\n  decoding?: 'async' | 'sync' | 'auto';\r\n  fetchPriority?: 'high' | 'low' | 'auto';\r\n  crossOrigin?: 'anonymous' | 'use-credentials';"
            ]
          }
        ],
        "hooks": [
          "useState",
          "useRef",
          "useCallback",
          "useEffect",
          "useDeviceDetection"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 324,
          "conditionals": 27,
          "loops": 3,
          "functions": 35,
          "score": 419
        },
        "issues": []
      },
      "ErrorBoundary": {
        "path": "src\\components\\ErrorBoundary.tsx",
        "name": "ErrorBoundary",
        "size": 7370,
        "lines": 217,
        "imports": [
          {
            "source": "react",
            "statement": "import React, {  Component, ErrorInfo, ReactNode , useCallback } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { AlertTriangle, RefreshCw, Home } from 'lucide-react'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          }
        ],
        "exports": [
          "withErrorBoundary",
          "useErrorHandler"
        ],
        "props": [],
        "hooks": [
          "useCallback",
          "useErrorHandler"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 217,
          "conditionals": 11,
          "loops": 1,
          "functions": 12,
          "score": 253
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "Footer": {
        "path": "src\\components\\Footer.tsx",
        "name": "Footer",
        "size": 12984,
        "lines": 345,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Facebook, Instagram, Twitter, Mail, Phone, MapPin } from 'lucide-react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 345,
          "conditionals": 0,
          "loops": 1,
          "functions": 5,
          "score": 352
        },
        "issues": []
      },
      "HeroSection": {
        "path": "src\\components\\HeroSection.tsx",
        "name": "HeroSection",
        "size": 8587,
        "lines": 229,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useState, useEffect } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { ChevronDown } from 'lucide-react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useState",
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 229,
          "conditionals": 0,
          "loops": 0,
          "functions": 11,
          "score": 240
        },
        "issues": []
      },
      "IndependentReviewsSection": {
        "path": "src\\components\\IndependentReviewsSection.tsx",
        "name": "IndependentReviewsSection",
        "size": 7823,
        "lines": 210,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { ExternalLink, Star } from 'lucide-react'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 210,
          "conditionals": 0,
          "loops": 2,
          "functions": 8,
          "score": 222
        },
        "issues": []
      },
      "LanguageSelector": {
        "path": "src\\components\\LanguageSelector.tsx",
        "name": "LanguageSelector",
        "size": 2959,
        "lines": 93,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useState, useEffect } from 'react'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage, SupportedLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/components/ui/select",
            "statement": "import {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n} from \"@/components/ui/select\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useState",
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 93,
          "conditionals": 2,
          "loops": 1,
          "functions": 5,
          "score": 104
        },
        "issues": []
      },
      "LanguageWrapper": {
        "path": "src\\components\\LanguageWrapper.tsx",
        "name": "LanguageWrapper",
        "size": 750,
        "lines": 26,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect, ReactNode } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { useParams } from 'react-router-dom'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage, SupportedLanguage } from '@/contexts/LanguageContext'"
          }
        ],
        "exports": [],
        "props": [
          {
            "interface": "LanguageWrapperProps",
            "properties": [
              "children: ReactNode;"
            ]
          }
        ],
        "hooks": [
          "useEffect",
          "useParams",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 26,
          "conditionals": 1,
          "loops": 0,
          "functions": 2,
          "score": 30
        },
        "issues": []
      },
      "index": {
        "path": "src\\pages\\locations\\werribee\\index.tsx",
        "name": "index",
        "size": 53260,
        "lines": 731,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "lucide-react",
            "statement": "import { MapPin, Phone, Mail, Clock, Car, Train, Bus } from 'lucide-react'"
          },
          {
            "source": "@/components/Footer",
            "statement": "import Footer from '@/components/Footer'"
          },
          {
            "source": "@/components/Navbar",
            "statement": "import Navbar from '@/components/Navbar'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 731,
          "conditionals": 0,
          "loops": 0,
          "functions": 4,
          "score": 735
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (731 lines). Consider breaking it down."
          }
        ]
      },
      "LayoutVariants": {
        "path": "src\\components\\layout\\LayoutVariants.tsx",
        "name": "LayoutVariants",
        "size": 3164,
        "lines": 121,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "../StandardPageLayout",
            "statement": "import StandardPageLayout from '../StandardPageLayout'"
          },
          {
            "source": "./types",
            "statement": "import { StandardPageLayoutProps } from './types'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [
          "LandingPageLayout",
          "ServicePageLayout",
          "LocationPageLayout",
          "ArticlePageLayout",
          "withStandardLayout",
          "createLayoutVariant",
          "MinimalLayout",
          "FullWidthLayout",
          "CenteredLayout"
        ],
        "props": [],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 121,
          "conditionals": 1,
          "loops": 0,
          "functions": 12,
          "score": 135
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "StandardSection": {
        "path": "src\\components\\layout\\StandardSection.tsx",
        "name": "StandardSection",
        "size": 2679,
        "lines": 108,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "./types",
            "statement": "import { StandardSectionProps } from './types'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [
          "HeroSection",
          "ContentSection",
          "FeatureSection",
          "CTASection"
        ],
        "props": [],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 108,
          "conditionals": 0,
          "loops": 0,
          "functions": 9,
          "score": 117
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "types": {
        "path": "src\\components\\medical-conditions\\types.ts",
        "name": "types",
        "size": 4316,
        "lines": 191,
        "imports": [
          {
            "source": "react",
            "statement": "import { ReactNode } from 'react'"
          }
        ],
        "exports": [
          "ConditionInfo",
          "QuickFact",
          "DegenerationStage",
          "AnatomicalComponent",
          "StructuralChange",
          "CauseRiskFactor",
          "Symptom",
          "DiagnosticMethod",
          "TreatmentOption",
          "Exercise",
          "PreventionStrategy",
          "PrognosisInfo",
          "ConditionData",
          "ConditionHeroProps",
          "ConditionOverviewProps",
          "DegenerationProcessProps",
          "CausesRiskFactorsProps",
          "SymptomsProps",
          "DiagnosticsProps",
          "TreatmentOptionsProps",
          "ExercisesProps",
          "PreventionProps",
          "PrognosisProps",
          "ConditionSection",
          "ConditionPageProps"
        ],
        "props": [
          {
            "interface": "ConditionHeroProps",
            "properties": [
              "title: string;\r\n  description: string;\r\n  backgroundImage?: string;\r\n  quickFacts: QuickFact[];"
            ]
          },
          {
            "interface": "ConditionOverviewProps",
            "properties": [
              "title: string;\r\n  description: string[];\r\n  keyPoints: string[];\r\n  image?: string;"
            ]
          },
          {
            "interface": "DegenerationProcessProps",
            "properties": [
              "stages: DegenerationStage[];\r\n  anatomicalComponents: AnatomicalComponent[];\r\n  structuralChanges: StructuralChange[];"
            ]
          },
          {
            "interface": "CausesRiskFactorsProps",
            "properties": [
              "causes: CauseRiskFactor[];"
            ]
          },
          {
            "interface": "SymptomsProps",
            "properties": [
              "symptoms: Symptom[];"
            ]
          },
          {
            "interface": "DiagnosticsProps",
            "properties": [
              "methods: DiagnosticMethod[];"
            ]
          },
          {
            "interface": "TreatmentOptionsProps",
            "properties": [
              "treatments: TreatmentOption[];"
            ]
          },
          {
            "interface": "ExercisesProps",
            "properties": [
              "exercises: Exercise[];"
            ]
          },
          {
            "interface": "PreventionProps",
            "properties": [
              "strategies: PreventionStrategy[];"
            ]
          },
          {
            "interface": "PrognosisProps",
            "properties": [
              "prognosis: PrognosisInfo[];"
            ]
          },
          {
            "interface": "ConditionPageProps",
            "properties": [
              "conditionData: ConditionData;\r\n  sections?: ConditionSection[];\r\n  showAssessment?: boolean;\r\n  showBooking?: boolean;"
            ]
          }
        ],
        "hooks": [
          "useRiskFactor"
        ],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": true,
        "complexity": {
          "lines": 191,
          "conditionals": 9,
          "loops": 0,
          "functions": 0,
          "score": 209
        },
        "issues": []
      },
      "Layout": {
        "path": "src\\components\\Layout.tsx",
        "name": "Layout",
        "size": 1057,
        "lines": 36,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout, { StandardPageLayoutProps } from '@/components/StandardPageLayout'"
          }
        ],
        "exports": [],
        "props": [
          {
            "interface": "LayoutProps",
            "properties": [
              "children: React.ReactNode;\r\n  /** Title for the current page",
              "will be announced to screen readers */\r\n  pageTitle?: string;\r\n  /** SEO data for the page */\r\n  seoData?: StandardPageLayoutProps['seoData'];\r\n  /** Page type for default SEO configuration */\r\n  pageType?: StandardPageLayoutProps['pageType'];"
            ]
          }
        ],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": true,
        "complexity": {
          "lines": 36,
          "conditionals": 3,
          "loops": 0,
          "functions": 1,
          "score": 43
        },
        "issues": []
      },
      "Loading": {
        "path": "src\\components\\Loading.tsx",
        "name": "Loading",
        "size": 5898,
        "lines": 256,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Loader2, Brain, Heart } from 'lucide-react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [
          "InlineLoading",
          "PageLoading",
          "ContentSkeleton",
          "CardSkeleton",
          "ImageSkeleton"
        ],
        "props": [
          {
            "interface": "LoadingProps",
            "properties": [
              "size?: 'sm' | 'md' | 'lg' | 'xl';\r\n  variant?: 'spinner' | 'pulse' | 'medical' | 'skeleton';\r\n  text?: string;\r\n  className?: string;\r\n  fullScreen?: boolean;"
            ]
          }
        ],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 256,
          "conditionals": 15,
          "loops": 1,
          "functions": 15,
          "score": 303
        },
        "issues": []
      },
      "ArthrosisTypesSection": {
        "path": "src\\components\\medical-conditions\\arthrosis\\ArthrosisTypesSection.tsx",
        "name": "ArthrosisTypesSection",
        "size": 12378,
        "lines": 271,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [],
        "props": [
          {
            "interface": "ArthrosisTypesSectionProps",
            "properties": [
              "className?: string;"
            ]
          }
        ],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 271,
          "conditionals": 1,
          "loops": 0,
          "functions": 3,
          "score": 276
        },
        "issues": [
          {
            "type": "MISSING_DISPLAY_NAME",
            "severity": "low",
            "message": "Component missing displayName for debugging"
          }
        ]
      },
      "ConditionHero": {
        "path": "src\\components\\medical-conditions\\ConditionHero.tsx",
        "name": "ConditionHero",
        "size": 4093,
        "lines": 118,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Target, Calendar } from 'lucide-react'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent } from '@/components/ui/card'"
          },
          {
            "source": "./types",
            "statement": "import { ConditionHeroProps } from './types'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 118,
          "conditionals": 0,
          "loops": 1,
          "functions": 2,
          "score": 122
        },
        "issues": []
      },
      "ConditionOverview": {
        "path": "src\\components\\medical-conditions\\ConditionOverview.tsx",
        "name": "ConditionOverview",
        "size": 2442,
        "lines": 74,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { CheckCircle } from 'lucide-react'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "./types",
            "statement": "import { ConditionOverviewProps } from './types'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 74,
          "conditionals": 0,
          "loops": 2,
          "functions": 2,
          "score": 80
        },
        "issues": []
      },
      "DegenerationProcess": {
        "path": "src\\components\\medical-conditions\\DegenerationProcess.tsx",
        "name": "DegenerationProcess",
        "size": 7959,
        "lines": 194,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card } from '@/components/ui/card'"
          },
          {
            "source": "./types",
            "statement": "import { DegenerationProcessProps } from './types'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 194,
          "conditionals": 1,
          "loops": 5,
          "functions": 9,
          "score": 215
        },
        "issues": []
      },
      "FacetJointAnatomySection": {
        "path": "src\\components\\medical-conditions\\facet-arthropathy\\FacetJointAnatomySection.tsx",
        "name": "FacetJointAnatomySection",
        "size": 13963,
        "lines": 277,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [],
        "props": [
          {
            "interface": "FacetJointAnatomySectionProps",
            "properties": [
              "className?: string;"
            ]
          }
        ],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 277,
          "conditionals": 1,
          "loops": 0,
          "functions": 2,
          "score": 281
        },
        "issues": [
          {
            "type": "MISSING_DISPLAY_NAME",
            "severity": "low",
            "message": "Component missing displayName for debugging"
          }
        ]
      },
      "ConditionHeroSection": {
        "path": "src\\components\\medical-conditions\\shared\\ConditionHeroSection.tsx",
        "name": "ConditionHeroSection",
        "size": 4272,
        "lines": 128,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Target, Calendar } from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [
          {
            "interface": "ConditionHeroSectionProps",
            "properties": [
              "/** Main title for the condition */\n  title: string;\n  /** Optional subtitle for additional context */\n  subtitle?: string;\n  /** Detailed description of the condition */\n  description: string;\n  /** Badge text to display above the title */\n  badgeText?: string;\n  /** Source URL for the hero background image */\n  heroImageSrc?: string;\n  /** Alt text for the hero image for accessibility */\n  heroImageAlt?: string;\n  /** Fallback image URL if main image fails to load */\n  fallbackImageSrc?: string;\n  /** Whether to show the assessment button */\n  showAssessmentButton?: boolean;\n  /** Whether to show the booking consultation button */\n  showBookingButton?: boolean;\n  /** Link destination for the assessment button */\n  assessmentLink?: string;\n  /** Link destination for the booking button */\n  bookingLink?: string;\n  /** Additional CSS classes for customization */\n  className?: string;"
            ]
          }
        ],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 128,
          "conditionals": 10,
          "loops": 0,
          "functions": 2,
          "score": 150
        },
        "issues": [
          {
            "type": "MISSING_DISPLAY_NAME",
            "severity": "low",
            "message": "Component missing displayName for debugging"
          }
        ]
      },
      "ConditionOverviewSection": {
        "path": "src\\components\\medical-conditions\\shared\\ConditionOverviewSection.tsx",
        "name": "ConditionOverviewSection",
        "size": 2836,
        "lines": 110,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "lucide-react",
            "statement": "import { CheckCircle } from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [
          {
            "interface": "ConditionOverviewSectionProps",
            "properties": [
              "title: string;\n  description: string[];\n  keyPoints?: OverviewPoint[];\n  imageSrc?: string;\n  imageAlt?: string;\n  fallbackImageSrc?: string;\n  imageCaption?: string;\n  className?: string;\n  reverseLayout?: boolean;"
            ]
          }
        ],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 110,
          "conditionals": 8,
          "loops": 2,
          "functions": 4,
          "score": 134
        },
        "issues": [
          {
            "type": "MISSING_DISPLAY_NAME",
            "severity": "low",
            "message": "Component missing displayName for debugging"
          }
        ]
      },
      "ConditionQuickFacts": {
        "path": "src\\components\\medical-conditions\\shared\\ConditionQuickFacts.tsx",
        "name": "ConditionQuickFacts",
        "size": 2492,
        "lines": 81,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent } from '@/components/ui/card'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "lucide-react",
            "statement": "import { LucideIcon } from 'lucide-react'"
          }
        ],
        "exports": [],
        "props": [
          {
            "interface": "ConditionQuickFactsProps",
            "properties": [
              "/** Array of quick facts to display */\n  facts: QuickFact[];\n  /** Additional CSS classes for customization */\n  className?: string;\n  /** Title for the quick facts section */\n  sectionTitle?: string;\n  /** Whether to show the section title */\n  showTitle?: boolean;"
            ]
          }
        ],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 81,
          "conditionals": 5,
          "loops": 1,
          "functions": 4,
          "score": 97
        },
        "issues": [
          {
            "type": "MISSING_DISPLAY_NAME",
            "severity": "low",
            "message": "Component missing displayName for debugging"
          }
        ]
      },
      "Navbar": {
        "path": "src\\components\\Navbar.tsx",
        "name": "Navbar",
        "size": 17042,
        "lines": 416,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useState, useEffect, useCallback } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Menu, X } from 'lucide-react'"
          },
          {
            "source": "@/components/LanguageSelector",
            "statement": "import LanguageSelector from '@/components/LanguageSelector'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/SkipLink",
            "statement": "import SkipLink from '@/components/SkipLink'"
          },
          {
            "source": "@/components/ThemeToggle",
            "statement": "import ThemeToggle from '@/components/ThemeToggle'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useState",
          "useEffect",
          "useCallback",
          "useLanguage",
          "useEvent",
          "useEnter",
          "useLeave"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 416,
          "conditionals": 9,
          "loops": 4,
          "functions": 27,
          "score": 469
        },
        "issues": []
      },
      "NetworkStatus": {
        "path": "src\\components\\NetworkStatus.tsx",
        "name": "NetworkStatus",
        "size": 7738,
        "lines": 250,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useState, useEffect } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Wifi, WifiOff, RefreshCw, AlertTriangle } from 'lucide-react'"
          },
          {
            "source": "@/components/ErrorBoundary",
            "statement": "import ErrorBoundary from '@/components/ErrorBoundary'"
          },
          {
            "source": "@/components/ui/alert",
            "statement": "import { Alert, AlertDescription } from '@/components/ui/alert'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [
          "NetworkStatus",
          "useNetworkStatus",
          "useRetryMechanism"
        ],
        "props": [
          {
            "interface": "NetworkStatusProps",
            "properties": [
              "onRetry?: () => void;\r\n  className?: string;"
            ]
          }
        ],
        "hooks": [
          "useState",
          "useEffect",
          "useNetworkStatus",
          "useRetryMechanism"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 250,
          "conditionals": 12,
          "loops": 1,
          "functions": 28,
          "score": 304
        },
        "issues": []
      },
      "OptimizedImage": {
        "path": "src\\components\\OptimizedImage.tsx",
        "name": "OptimizedImage",
        "size": 2443,
        "lines": 99,
        "imports": [
          {
            "source": "react",
            "statement": "import React , { useCallback } from 'react'"
          },
          {
            "source": "@/components/EnhancedImage",
            "statement": "import EnhancedImage from '@/components/EnhancedImage'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [
          "OptimizedImage",
          "useResponsiveImageSizes",
          "MedicalImage"
        ],
        "props": [
          {
            "interface": "OptimizedImageProps",
            "properties": [
              "src: string;\r\n  alt: string;\r\n  className?: string;\r\n  width?: number;\r\n  height?: number;\r\n  priority?: boolean;\r\n  quality?: number;\r\n  placeholder?: 'blur' | 'empty';\r\n  blurDataURL?: string;\r\n  sizes?: string;\r\n  onLoad?: () => void;\r\n  onError?: () => void;"
            ]
          }
        ],
        "hooks": [
          "useCallback",
          "useResponsiveImageSizes"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 99,
          "conditionals": 11,
          "loops": 1,
          "functions": 7,
          "score": 130
        },
        "issues": []
      },
      "PageHeader": {
        "path": "src\\components\\PageHeader.tsx",
        "name": "PageHeader",
        "size": 4256,
        "lines": 134,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect, useState } from 'react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [],
        "props": [
          {
            "interface": "PageHeaderProps",
            "properties": [
              "title: string;\r\n  subtitle?: string;\r\n  backgroundImage?: string;\r\n  className?: string;\r\n  enableParallax?: boolean;"
            ]
          }
        ],
        "hooks": [
          "useEffect",
          "useState",
          "useDeviceDetection"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 134,
          "conditionals": 6,
          "loops": 0,
          "functions": 11,
          "score": 157
        },
        "issues": []
      },
      "ProcedureCard": {
        "path": "src\\components\\ProcedureCard.tsx",
        "name": "ProcedureCard",
        "size": 5410,
        "lines": 138,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useState } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Users, Clock, MapPin, Activity, Stethoscope, Microscope } from 'lucide-react'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/types/procedures",
            "statement": "import { ProcedureProps, normalizeProcedureData } from '@/types/procedures'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useState",
          "useDeviceDetection",
          "useLanguage",
          "useEnter",
          "useLeave"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 138,
          "conditionals": 4,
          "loops": 1,
          "functions": 8,
          "score": 156
        },
        "issues": []
      },
      "SafeImage": {
        "path": "src\\components\\SafeImage.tsx",
        "name": "SafeImage",
        "size": 2693,
        "lines": 93,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useState, useEffect, useCallback } from 'react'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useState",
          "useEffect",
          "useCallback"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 93,
          "conditionals": 6,
          "loops": 0,
          "functions": 7,
          "score": 112
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          },
          {
            "type": "MISSING_DISPLAY_NAME",
            "severity": "low",
            "message": "Component missing displayName for debugging"
          }
        ]
      },
      "ScreenReaderAnnouncer": {
        "path": "src\\components\\ScreenReaderAnnouncer.tsx",
        "name": "ScreenReaderAnnouncer",
        "size": 2011,
        "lines": 69,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect, useRef } from 'react'"
          }
        ],
        "exports": [],
        "props": [
          {
            "interface": "ScreenReaderAnnouncerProps",
            "properties": [
              "/** The message to announce to screen readers */\r\n  message?: string;\r\n  /** The politeness level for the announcement */\r\n  politeness?: 'polite' | 'assertive';\r\n  /** Whether to clear the message after it's announced */\r\n  clearAfter?: number;\r\n  /** Additional role for the announcer */\r\n  role?: 'status' | 'alert' | 'log';"
            ]
          }
        ],
        "hooks": [
          "useEffect",
          "useRef"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 69,
          "conditionals": 8,
          "loops": 0,
          "functions": 8,
          "score": 93
        },
        "issues": [
          {
            "type": "MISSING_DISPLAY_NAME",
            "severity": "low",
            "message": "Component missing displayName for debugging"
          }
        ]
      },
      "SEOHead": {
        "path": "src\\components\\SEOHead.tsx",
        "name": "SEOHead",
        "size": 7932,
        "lines": 256,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "react-helmet-async",
            "statement": "import { Helmet } from 'react-helmet-async'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          }
        ],
        "exports": [
          "SEOHead"
        ],
        "props": [
          {
            "interface": "SEOProps",
            "properties": [
              "title?: string;\r\n  description?: string;\r\n  keywords?: string[];\r\n  image?: string;\r\n  url?: string;\r\n  type?: 'website' | 'article' | 'profile' | 'medical.condition' | 'medical.procedure';\r\n  publishedTime?: string;\r\n  modifiedTime?: string;\r\n  author?: string;\r\n  medicalSpecialty?: string;\r\n  condition?: string;\r\n  procedure?: string;\r\n  noIndex?: boolean;\r\n  canonicalUrl?: string;"
            ]
          }
        ],
        "hooks": [
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": true,
        "complexity": {
          "lines": 256,
          "conditionals": 14,
          "loops": 0,
          "functions": 14,
          "score": 298
        },
        "issues": []
      },
      "SkipLink": {
        "path": "src\\components\\SkipLink.tsx",
        "name": "SkipLink",
        "size": 1151,
        "lines": 46,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          }
        ],
        "exports": [],
        "props": [
          {
            "interface": "SkipLinkProps",
            "properties": [
              "/** The target ID to skip to (without the #) */\r\n  targetId?: string;\r\n  /** The text to display in the skip link */\r\n  text?: string;\r\n  /** Additional CSS classes to apply to the skip link */\r\n  className?: string;"
            ]
          }
        ],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 46,
          "conditionals": 3,
          "loops": 0,
          "functions": 1,
          "score": 53
        },
        "issues": []
      },
      "StandardPageLayout": {
        "path": "src\\components\\StandardPageLayout.tsx",
        "name": "StandardPageLayout",
        "size": 3286,
        "lines": 124,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "@/components/ErrorBoundary",
            "statement": "import ErrorBoundary from '@/components/ErrorBoundary'"
          },
          {
            "source": "@/components/Footer",
            "statement": "import Footer from '@/components/Footer'"
          },
          {
            "source": "@/components/Navbar",
            "statement": "import Navbar from '@/components/Navbar'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "./layout/types",
            "statement": "import { StandardPageLayoutProps } from './layout/types'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/lib/seo",
            "statement": "import { generatePageSEO } from '@/lib/seo'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/hooks/useSEO",
            "statement": "import { useSEO } from '@/hooks/useSEO'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useSEO"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 124,
          "conditionals": 2,
          "loops": 0,
          "functions": 9,
          "score": 137
        },
        "issues": []
      },
      "TestimonialsSection": {
        "path": "src\\components\\TestimonialsSection.tsx",
        "name": "TestimonialsSection",
        "size": 7485,
        "lines": 190,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useState, useEffect, useCallback } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { ChevronLeft, ChevronRight, Star } from 'lucide-react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useState",
          "useEffect",
          "useCallback",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 190,
          "conditionals": 3,
          "loops": 3,
          "functions": 12,
          "score": 214
        },
        "issues": []
      },
      "ThemeToggle": {
        "path": "src\\components\\ThemeToggle.tsx",
        "name": "ThemeToggle",
        "size": 2164,
        "lines": 67,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useState, useEffect, useCallback } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Moon, Sun } from 'lucide-react'"
          },
          {
            "source": "@/components/ErrorBoundary",
            "statement": "import ErrorBoundary from '@/components/ErrorBoundary'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useState",
          "useEffect",
          "useCallback"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 67,
          "conditionals": 3,
          "loops": 0,
          "functions": 6,
          "score": 79
        },
        "issues": []
      },
      "accordion": {
        "path": "src\\components\\ui\\accordion.tsx",
        "name": "accordion",
        "size": 2605,
        "lines": 81,
        "imports": [
          {
            "source": "@radix-ui/react-accordion",
            "statement": "import * as AccordionPrimitive from '@radix-ui/react-accordion'"
          },
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { ChevronDown } from 'lucide-react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 81,
          "conditionals": 0,
          "loops": 0,
          "functions": 8,
          "score": 89
        },
        "issues": []
      },
      "alert-dialog": {
        "path": "src\\components\\ui\\alert-dialog.tsx",
        "name": "alert-dialog",
        "size": 4558,
        "lines": 140,
        "imports": [
          {
            "source": "@radix-ui/react-alert-dialog",
            "statement": "import * as AlertDialogPrimitive from '@radix-ui/react-alert-dialog'"
          },
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { buttonVariants } from '@/components/ui/button'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 140,
          "conditionals": 0,
          "loops": 0,
          "functions": 11,
          "score": 151
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "alert": {
        "path": "src\\components\\ui\\alert.tsx",
        "name": "alert",
        "size": 1643,
        "lines": 61,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "class-variance-authority",
            "statement": "import { cva, type VariantProps } from 'class-variance-authority'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 61,
          "conditionals": 0,
          "loops": 0,
          "functions": 4,
          "score": 65
        },
        "issues": []
      },
      "aspect-ratio": {
        "path": "src\\components\\ui\\aspect-ratio.tsx",
        "name": "aspect-ratio",
        "size": 146,
        "lines": 6,
        "imports": [
          {
            "source": "@radix-ui/react-aspect-ratio",
            "statement": "import * as AspectRatioPrimitive from '@radix-ui/react-aspect-ratio'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 6,
          "conditionals": 0,
          "loops": 0,
          "functions": 1,
          "score": 7
        },
        "issues": []
      },
      "avatar": {
        "path": "src\\components\\ui\\avatar.tsx",
        "name": "avatar",
        "size": 1451,
        "lines": 49,
        "imports": [
          {
            "source": "@radix-ui/react-avatar",
            "statement": "import * as AvatarPrimitive from '@radix-ui/react-avatar'"
          },
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 49,
          "conditionals": 0,
          "loops": 0,
          "functions": 3,
          "score": 52
        },
        "issues": []
      },
      "badge": {
        "path": "src\\components\\ui\\badge.tsx",
        "name": "badge",
        "size": 1186,
        "lines": 38,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "class-variance-authority",
            "statement": "import { cva, type VariantProps } from 'class-variance-authority'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [
          "BadgeProps"
        ],
        "props": [],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": true,
        "complexity": {
          "lines": 38,
          "conditionals": 0,
          "loops": 0,
          "functions": 2,
          "score": 40
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          },
          {
            "type": "MISSING_DISPLAY_NAME",
            "severity": "low",
            "message": "Component missing displayName for debugging"
          }
        ]
      },
      "breadcrumb": {
        "path": "src\\components\\ui\\breadcrumb.tsx",
        "name": "breadcrumb",
        "size": 2815,
        "lines": 116,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { ChevronRight, MoreHorizontal } from 'lucide-react'"
          },
          {
            "source": "@radix-ui/react-slot",
            "statement": "import { Slot } from '@radix-ui/react-slot'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 116,
          "conditionals": 2,
          "loops": 0,
          "functions": 9,
          "score": 129
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "button": {
        "path": "src\\components\\ui\\button.tsx",
        "name": "button",
        "size": 3104,
        "lines": 73,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@radix-ui/react-slot",
            "statement": "import { Slot } from '@radix-ui/react-slot'"
          },
          {
            "source": "class-variance-authority",
            "statement": "import { cva, type VariantProps } from 'class-variance-authority'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [
          "ButtonProps"
        ],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": true,
        "complexity": {
          "lines": 73,
          "conditionals": 3,
          "loops": 0,
          "functions": 4,
          "score": 83
        },
        "issues": []
      },
      "calendar": {
        "path": "src\\components\\ui\\calendar.tsx",
        "name": "calendar",
        "size": 3095,
        "lines": 74,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useMemo, ComponentProps } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { ChevronLeft, ChevronRight } from 'lucide-react'"
          },
          {
            "source": "react-day-picker",
            "statement": "import { DayPicker } from 'react-day-picker'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { buttonVariants } from '@/components/ui/button'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [
          "CalendarProps"
        ],
        "props": [],
        "hooks": [
          "useMemo",
          "useDeviceDetection"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 74,
          "conditionals": 0,
          "loops": 0,
          "functions": 2,
          "score": 76
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "card": {
        "path": "src\\components\\ui\\card.tsx",
        "name": "card",
        "size": 3137,
        "lines": 135,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 135,
          "conditionals": 0,
          "loops": 0,
          "functions": 12,
          "score": 147
        },
        "issues": []
      },
      "carousel": {
        "path": "src\\components\\ui\\carousel.tsx",
        "name": "carousel",
        "size": 6531,
        "lines": 254,
        "imports": [
          {
            "source": "react",
            "statement": "import React , { useState, useEffect, useCallback, useMemo, useContext } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { ArrowLeft, ArrowRight } from 'lucide-react'"
          },
          {
            "source": "embla-carousel-react",
            "statement": "import useEmblaCarousel, {\r\n  type UseEmblaCarouselType,\r\n} from \"embla-carousel-react\""
          },
          {
            "source": "@/components/ErrorBoundary",
            "statement": "import ErrorBoundary from '@/components/ErrorBoundary'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useState",
          "useEffect",
          "useCallback",
          "useMemo",
          "useContext",
          "useEmblaCarousel",
          "useCarousel"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 254,
          "conditionals": 10,
          "loops": 0,
          "functions": 25,
          "score": 299
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "chart": {
        "path": "src\\components\\ui\\chart.tsx",
        "name": "chart",
        "size": 3321,
        "lines": 144,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useContext } from 'react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [
          "ChartConfig"
        ],
        "props": [],
        "hooks": [
          "useContext",
          "useChart",
          "useId"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": true,
        "complexity": {
          "lines": 144,
          "conditionals": 13,
          "loops": 2,
          "functions": 11,
          "score": 185
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "checkbox": {
        "path": "src\\components\\ui\\checkbox.tsx",
        "name": "checkbox",
        "size": 2947,
        "lines": 88,
        "imports": [
          {
            "source": "@radix-ui/react-checkbox",
            "statement": "import * as CheckboxPrimitive from '@radix-ui/react-checkbox'"
          },
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Check } from 'lucide-react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/lib/accessibility",
            "statement": "import { generateId } from '@/lib/accessibility'"
          }
        ],
        "exports": [
          "CheckboxProps"
        ],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 88,
          "conditionals": 3,
          "loops": 0,
          "functions": 6,
          "score": 100
        },
        "issues": []
      },
      "collapsible": {
        "path": "src\\components\\ui\\collapsible.tsx",
        "name": "collapsible",
        "size": 325,
        "lines": 10,
        "imports": [
          {
            "source": "@radix-ui/react-collapsible",
            "statement": "import * as CollapsiblePrimitive from '@radix-ui/react-collapsible'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 10,
          "conditionals": 0,
          "loops": 0,
          "functions": 3,
          "score": 13
        },
        "issues": []
      },
      "command": {
        "path": "src\\components\\ui\\command.tsx",
        "name": "command",
        "size": 5035,
        "lines": 153,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Search } from 'lucide-react'"
          },
          {
            "source": "@radix-ui/react-dialog",
            "statement": "import { type DialogProps } from '@radix-ui/react-dialog'"
          },
          {
            "source": "cmdk",
            "statement": "import { Command as CommandPrimitive } from 'cmdk'"
          },
          {
            "source": "@/components/ui/dialog",
            "statement": "import { Dialog, DialogContent } from '@/components/ui/dialog'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 153,
          "conditionals": 0,
          "loops": 0,
          "functions": 11,
          "score": 164
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "context-menu": {
        "path": "src\\components\\ui\\context-menu.tsx",
        "name": "context-menu",
        "size": 7441,
        "lines": 198,
        "imports": [
          {
            "source": "@radix-ui/react-context-menu",
            "statement": "import * as ContextMenuPrimitive from '@radix-ui/react-context-menu'"
          },
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Check, ChevronRight, Circle } from 'lucide-react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 198,
          "conditionals": 3,
          "loops": 0,
          "functions": 16,
          "score": 220
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "dialog": {
        "path": "src\\components\\ui\\dialog.tsx",
        "name": "dialog",
        "size": 4755,
        "lines": 147,
        "imports": [
          {
            "source": "@radix-ui/react-dialog",
            "statement": "import * as DialogPrimitive from '@radix-ui/react-dialog'"
          },
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { X } from 'lucide-react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 147,
          "conditionals": 0,
          "loops": 0,
          "functions": 14,
          "score": 161
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "drawer": {
        "path": "src\\components\\ui\\drawer.tsx",
        "name": "drawer",
        "size": 3118,
        "lines": 117,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "vaul",
            "statement": "import { Drawer as DrawerPrimitive } from 'vaul'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 117,
          "conditionals": 0,
          "loops": 0,
          "functions": 10,
          "score": 127
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "dropdown-menu": {
        "path": "src\\components\\ui\\dropdown-menu.tsx",
        "name": "dropdown-menu",
        "size": 7501,
        "lines": 199,
        "imports": [
          {
            "source": "@radix-ui/react-dropdown-menu",
            "statement": "import * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu'"
          },
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Check, ChevronRight, Circle } from 'lucide-react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 199,
          "conditionals": 3,
          "loops": 0,
          "functions": 16,
          "score": 221
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "form": {
        "path": "src\\components\\ui\\form.tsx",
        "name": "form",
        "size": 4386,
        "lines": 178,
        "imports": [
          {
            "source": "@radix-ui/react-label",
            "statement": "import * as LabelPrimitive from '@radix-ui/react-label'"
          },
          {
            "source": "react",
            "statement": "import React , { useContext } from 'react'"
          },
          {
            "source": "@radix-ui/react-slot",
            "statement": "import { Slot } from '@radix-ui/react-slot'"
          },
          {
            "source": "react-hook-form",
            "statement": "import {\r\n  Controller,\r\n  ControllerProps,\r\n  FieldPath,\r\n  FieldValues,\r\n  FormProvider,\r\n  useFormContext,\r\n} from \"react-hook-form\""
          },
          {
            "source": "@/components/ErrorBoundary",
            "statement": "import ErrorBoundary from '@/components/ErrorBoundary'"
          },
          {
            "source": "@/components/ui/label",
            "statement": "import { Label } from '@/components/ui/label'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useContext",
          "useFormContext",
          "useFormField",
          "useId"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 178,
          "conditionals": 2,
          "loops": 0,
          "functions": 22,
          "score": 204
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "hover-card": {
        "path": "src\\components\\ui\\hover-card.tsx",
        "name": "hover-card",
        "size": 1212,
        "lines": 27,
        "imports": [
          {
            "source": "@radix-ui/react-hover-card",
            "statement": "import * as HoverCardPrimitive from '@radix-ui/react-hover-card'"
          },
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 27,
          "conditionals": 0,
          "loops": 0,
          "functions": 3,
          "score": 30
        },
        "issues": []
      },
      "input-otp": {
        "path": "src\\components\\ui\\input-otp.tsx",
        "name": "input-otp",
        "size": 2264,
        "lines": 70,
        "imports": [
          {
            "source": "react",
            "statement": "import React , { useCallback, useContext } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Dot } from 'lucide-react'"
          },
          {
            "source": "input-otp",
            "statement": "import { OTPInput, OTPInputContext } from 'input-otp'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useCallback",
          "useContext"
        ],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 70,
          "conditionals": 0,
          "loops": 0,
          "functions": 6,
          "score": 76
        },
        "issues": []
      },
      "input": {
        "path": "src\\components\\ui\\input.tsx",
        "name": "input",
        "size": 2287,
        "lines": 66,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/lib/accessibility",
            "statement": "import { generateId } from '@/lib/accessibility'"
          }
        ],
        "exports": [
          "InputProps"
        ],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 66,
          "conditionals": 2,
          "loops": 0,
          "functions": 6,
          "score": 76
        },
        "issues": []
      },
      "label": {
        "path": "src\\components\\ui\\label.tsx",
        "name": "label",
        "size": 755,
        "lines": 26,
        "imports": [
          {
            "source": "@radix-ui/react-label",
            "statement": "import * as LabelPrimitive from '@radix-ui/react-label'"
          },
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "class-variance-authority",
            "statement": "import { cva, type VariantProps } from 'class-variance-authority'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 26,
          "conditionals": 0,
          "loops": 0,
          "functions": 2,
          "score": 28
        },
        "issues": []
      },
      "menubar": {
        "path": "src\\components\\ui\\menubar.tsx",
        "name": "menubar",
        "size": 8209,
        "lines": 230,
        "imports": [
          {
            "source": "@radix-ui/react-menubar",
            "statement": "import * as MenubarPrimitive from '@radix-ui/react-menubar'"
          },
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Check, ChevronRight, Circle } from 'lucide-react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 230,
          "conditionals": 3,
          "loops": 0,
          "functions": 17,
          "score": 253
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "navigation-menu": {
        "path": "src\\components\\ui\\navigation-menu.tsx",
        "name": "navigation-menu",
        "size": 5191,
        "lines": 130,
        "imports": [
          {
            "source": "@radix-ui/react-navigation-menu",
            "statement": "import * as NavigationMenuPrimitive from '@radix-ui/react-navigation-menu'"
          },
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { ChevronDown } from 'lucide-react'"
          },
          {
            "source": "class-variance-authority",
            "statement": "import { cva } from 'class-variance-authority'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 130,
          "conditionals": 0,
          "loops": 0,
          "functions": 9,
          "score": 139
        },
        "issues": []
      },
      "pagination": {
        "path": "src\\components\\ui\\pagination.tsx",
        "name": "pagination",
        "size": 2880,
        "lines": 117,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { ChevronLeft, ChevronRight, MoreHorizontal } from 'lucide-react'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { ButtonProps, buttonVariants } from '@/components/ui/button'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 117,
          "conditionals": 1,
          "loops": 0,
          "functions": 7,
          "score": 126
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "popover": {
        "path": "src\\components\\ui\\popover.tsx",
        "name": "popover",
        "size": 1594,
        "lines": 38,
        "imports": [
          {
            "source": "@radix-ui/react-popover",
            "statement": "import * as PopoverPrimitive from '@radix-ui/react-popover'"
          },
          {
            "source": "react",
            "statement": "import { forwardRef, ElementRef, ComponentPropsWithoutRef } from 'react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 38,
          "conditionals": 0,
          "loops": 0,
          "functions": 5,
          "score": 43
        },
        "issues": []
      },
      "progress": {
        "path": "src\\components\\ui\\progress.tsx",
        "name": "progress",
        "size": 806,
        "lines": 27,
        "imports": [
          {
            "source": "@radix-ui/react-progress",
            "statement": "import * as ProgressPrimitive from '@radix-ui/react-progress'"
          },
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 27,
          "conditionals": 0,
          "loops": 0,
          "functions": 1,
          "score": 28
        },
        "issues": []
      },
      "radio-group": {
        "path": "src\\components\\ui\\radio-group.tsx",
        "name": "radio-group",
        "size": 1515,
        "lines": 43,
        "imports": [
          {
            "source": "@radix-ui/react-radio-group",
            "statement": "import * as RadioGroupPrimitive from '@radix-ui/react-radio-group'"
          },
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Circle } from 'lucide-react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 43,
          "conditionals": 0,
          "loops": 0,
          "functions": 4,
          "score": 47
        },
        "issues": []
      },
      "resizable": {
        "path": "src\\components\\ui\\resizable.tsx",
        "name": "resizable",
        "size": 1782,
        "lines": 45,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "react-resizable-panels",
            "statement": "import * as ResizablePrimitive from 'react-resizable-panels'"
          },
          {
            "source": "lucide-react",
            "statement": "import { GripVertical } from 'lucide-react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 45,
          "conditionals": 1,
          "loops": 0,
          "functions": 3,
          "score": 50
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          },
          {
            "type": "MISSING_DISPLAY_NAME",
            "severity": "low",
            "message": "Component missing displayName for debugging"
          }
        ]
      },
      "scroll-area": {
        "path": "src\\components\\ui\\scroll-area.tsx",
        "name": "scroll-area",
        "size": 1689,
        "lines": 46,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@radix-ui/react-scroll-area",
            "statement": "import * as ScrollAreaPrimitive from '@radix-ui/react-scroll-area'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 46,
          "conditionals": 0,
          "loops": 0,
          "functions": 2,
          "score": 48
        },
        "issues": []
      },
      "select": {
        "path": "src\\components\\ui\\select.tsx",
        "name": "select",
        "size": 7523,
        "lines": 215,
        "imports": [
          {
            "source": "@radix-ui/react-select",
            "statement": "import * as SelectPrimitive from '@radix-ui/react-select'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Check, ChevronDown, ChevronUp } from 'lucide-react'"
          },
          {
            "source": "react",
            "statement": "import { forwardRef, ElementRef, ComponentPropsWithoutRef, useId } from 'react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [
          "SelectTriggerProps"
        ],
        "props": [],
        "hooks": [
          "useId",
          "useDeviceDetection"
        ],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 215,
          "conditionals": 2,
          "loops": 0,
          "functions": 17,
          "score": 236
        },
        "issues": []
      },
      "separator": {
        "path": "src\\components\\ui\\separator.tsx",
        "name": "separator",
        "size": 739,
        "lines": 24,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@radix-ui/react-separator",
            "statement": "import * as SeparatorPrimitive from '@radix-ui/react-separator'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 24,
          "conditionals": 0,
          "loops": 0,
          "functions": 1,
          "score": 25
        },
        "issues": []
      },
      "sheet": {
        "path": "src\\components\\ui\\sheet.tsx",
        "name": "sheet",
        "size": 4390,
        "lines": 131,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@radix-ui/react-dialog",
            "statement": "import * as SheetPrimitive from '@radix-ui/react-dialog'"
          },
          {
            "source": "lucide-react",
            "statement": "import { X } from 'lucide-react'"
          },
          {
            "source": "class-variance-authority",
            "statement": "import { cva, type VariantProps } from 'class-variance-authority'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": true,
        "complexity": {
          "lines": 131,
          "conditionals": 0,
          "loops": 0,
          "functions": 11,
          "score": 142
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          }
        ]
      },
      "skeleton": {
        "path": "src\\components\\ui\\skeleton.tsx",
        "name": "skeleton",
        "size": 303,
        "lines": 16,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 16,
          "conditionals": 0,
          "loops": 0,
          "functions": 1,
          "score": 17
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          },
          {
            "type": "MISSING_DISPLAY_NAME",
            "severity": "low",
            "message": "Component missing displayName for debugging"
          }
        ]
      },
      "slider": {
        "path": "src\\components\\ui\\slider.tsx",
        "name": "slider",
        "size": 1101,
        "lines": 27,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@radix-ui/react-slider",
            "statement": "import * as SliderPrimitive from '@radix-ui/react-slider'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 27,
          "conditionals": 0,
          "loops": 0,
          "functions": 1,
          "score": 28
        },
        "issues": []
      },
      "sonner": {
        "path": "src\\components\\ui\\sonner.tsx",
        "name": "sonner",
        "size": 2256,
        "lines": 65,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect, useState } from \"react\""
          },
          {
            "source": "next-themes",
            "statement": "import { useTheme } from \"next-themes\""
          },
          {
            "source": "sonner",
            "statement": "import { Toaster as Sonner } from \"sonner\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useState",
          "useTheme"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 65,
          "conditionals": 2,
          "loops": 0,
          "functions": 11,
          "score": 80
        },
        "issues": [
          {
            "type": "MISSING_PROPS_INTERFACE",
            "severity": "medium",
            "message": "Component uses props but has no TypeScript interface defined"
          },
          {
            "type": "MISSING_DISPLAY_NAME",
            "severity": "low",
            "message": "Component missing displayName for debugging"
          }
        ]
      },
      "switch": {
        "path": "src\\components\\ui\\switch.tsx",
        "name": "switch",
        "size": 1193,
        "lines": 28,
        "imports": [
          {
            "source": "@radix-ui/react-switch",
            "statement": "import * as SwitchPrimitives from '@radix-ui/react-switch'"
          },
          {
            "source": "react",
            "statement": "import { forwardRef, ElementRef, ComponentPropsWithoutRef } from 'react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 28,
          "conditionals": 0,
          "loops": 0,
          "functions": 1,
          "score": 29
        },
        "issues": []
      },
      "table": {
        "path": "src\\components\\ui\\table.tsx",
        "name": "table",
        "size": 3193,
        "lines": 129,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 129,
          "conditionals": 0,
          "loops": 0,
          "functions": 10,
          "score": 139
        },
        "issues": []
      },
      "tabs": {
        "path": "src\\components\\ui\\tabs.tsx",
        "name": "tabs",
        "size": 2499,
        "lines": 74,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@radix-ui/react-tabs",
            "statement": "import * as TabsPrimitive from '@radix-ui/react-tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useDeviceDetection"
        ],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 74,
          "conditionals": 0,
          "loops": 0,
          "functions": 10,
          "score": 84
        },
        "issues": []
      },
      "textarea": {
        "path": "src\\components\\ui\\textarea.tsx",
        "name": "textarea",
        "size": 2217,
        "lines": 66,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/lib/accessibility",
            "statement": "import { generateId } from '@/lib/accessibility'"
          }
        ],
        "exports": [
          "TextareaProps"
        ],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 66,
          "conditionals": 2,
          "loops": 0,
          "functions": 6,
          "score": 76
        },
        "issues": []
      },
      "toggle-group": {
        "path": "src\\components\\ui\\toggle-group.tsx",
        "name": "toggle-group",
        "size": 1837,
        "lines": 61,
        "imports": [
          {
            "source": "react",
            "statement": "import React , { useContext } from 'react'"
          },
          {
            "source": "@radix-ui/react-toggle-group",
            "statement": "import * as ToggleGroupPrimitive from '@radix-ui/react-toggle-group'"
          },
          {
            "source": "class-variance-authority",
            "statement": "import { type VariantProps } from 'class-variance-authority'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/components/ui/toggle",
            "statement": "import { toggleVariants } from '@/components/ui/toggle'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useContext"
        ],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 61,
          "conditionals": 0,
          "loops": 0,
          "functions": 5,
          "score": 66
        },
        "issues": []
      },
      "toggle": {
        "path": "src\\components\\ui\\toggle.tsx",
        "name": "toggle",
        "size": 1472,
        "lines": 44,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@radix-ui/react-toggle",
            "statement": "import * as TogglePrimitive from '@radix-ui/react-toggle'"
          },
          {
            "source": "class-variance-authority",
            "statement": "import { cva, type VariantProps } from 'class-variance-authority'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 44,
          "conditionals": 0,
          "loops": 0,
          "functions": 2,
          "score": 46
        },
        "issues": []
      },
      "tooltip": {
        "path": "src\\components\\ui\\tooltip.tsx",
        "name": "tooltip",
        "size": 1171,
        "lines": 29,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@radix-ui/react-tooltip",
            "statement": "import * as TooltipPrimitive from '@radix-ui/react-tooltip'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 29,
          "conditionals": 0,
          "loops": 0,
          "functions": 4,
          "score": 33
        },
        "issues": []
      },
      "use-toast": {
        "path": "src\\components\\ui\\use-toast.ts",
        "name": "use-toast",
        "size": 52,
        "lines": 3,
        "imports": [
          {
            "source": "sonner",
            "statement": "import { toast } from 'sonner'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": false,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 3,
          "conditionals": 0,
          "loops": 0,
          "functions": 0,
          "score": 3
        },
        "issues": []
      },
      "AppointmentBooking": {
        "path": "src\\pages\\AppointmentBooking.tsx",
        "name": "AppointmentBooking",
        "size": 41852,
        "lines": 891,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useState, useEffect, useCallback } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { CalendarIcon, CreditCard, Check, ChevronRight } from 'lucide-react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "date-fns",
            "statement": "import { format, addDays, differenceInDays } from 'date-fns'"
          },
          {
            "source": "@/components/Footer",
            "statement": "import Footer from '@/components/Footer'"
          },
          {
            "source": "@/components/Navbar",
            "statement": "import Navbar from '@/components/Navbar'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/calendar",
            "statement": "import { Calendar } from '@/components/ui/calendar'"
          },
          {
            "source": "@/components/ui/input",
            "statement": "import { Input } from '@/components/ui/input'"
          },
          {
            "source": "@/components/ui/label",
            "statement": "import { Label } from '@/components/ui/label'"
          },
          {
            "source": "@/components/ProcedureCard",
            "statement": "import { ProcedureProps } from '@/components/ProcedureCard'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/components/ui/popover",
            "statement": "import {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger\r\n} from \"@/components/ui/popover\""
          },
          {
            "source": "@/components/ui/select",
            "statement": "import {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue\r\n} from \"@/components/ui/select\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useState",
          "useEffect",
          "useCallback"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 891,
          "conditionals": 0,
          "loops": 4,
          "functions": 11,
          "score": 910
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (891 lines). Consider breaking it down."
          }
        ]
      },
      "Appointments": {
        "path": "src\\pages\\Appointments.tsx",
        "name": "Appointments",
        "size": 39050,
        "lines": 824,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/input",
            "statement": "import { Input } from '@/components/ui/input'"
          },
          {
            "source": "@/components/ui/label",
            "statement": "import { Label } from '@/components/ui/label'"
          },
          {
            "source": "@/components/ui/textarea",
            "statement": "import { Textarea } from '@/components/ui/textarea'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/lib/seo",
            "statement": "import { generatePageSEO } from '@/lib/seo'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "@/components/ui/select",
            "statement": "import {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 824,
          "conditionals": 0,
          "loops": 3,
          "functions": 6,
          "score": 836
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (824 lines). Consider breaking it down."
          }
        ]
      },
      "ConsultingRooms": {
        "path": "src\\pages\\ConsultingRooms.tsx",
        "name": "ConsultingRooms",
        "size": 22314,
        "lines": 337,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/Footer",
            "statement": "import Footer from '@/components/Footer'"
          },
          {
            "source": "@/components/Navbar",
            "statement": "import Navbar from '@/components/Navbar'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/input",
            "statement": "import { Input } from '@/components/ui/input'"
          },
          {
            "source": "@/components/ui/label",
            "statement": "import { Label } from '@/components/ui/label'"
          },
          {
            "source": "@/components/ui/textarea",
            "statement": "import { Textarea } from '@/components/ui/textarea'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 337,
          "conditionals": 0,
          "loops": 0,
          "functions": 6,
          "score": 343
        },
        "issues": []
      },
      "Contact": {
        "path": "src\\pages\\Contact.tsx",
        "name": "Contact",
        "size": 35992,
        "lines": 760,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useState, useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "lucide-react",
            "statement": "import { MapPin, Phone, Mail, Clock, Send, Check, FileText, CreditCard, Building, Users } from 'lucide-react'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/input",
            "statement": "import { Input } from '@/components/ui/input'"
          },
          {
            "source": "@/components/ui/label",
            "statement": "import { Label } from '@/components/ui/label'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useState",
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 760,
          "conditionals": 0,
          "loops": 0,
          "functions": 10,
          "score": 770
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (760 lines). Consider breaking it down."
          }
        ]
      },
      "CervicalDiscReplacement": {
        "path": "src\\pages\\expertise\\CervicalDiscReplacement.tsx",
        "name": "CervicalDiscReplacement",
        "size": 27335,
        "lines": 422,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 422,
          "conditionals": 0,
          "loops": 0,
          "functions": 3,
          "score": 425
        },
        "issues": []
      },
      "ImageGuidedSurgery": {
        "path": "src\\pages\\expertise\\ImageGuidedSurgery.tsx",
        "name": "ImageGuidedSurgery",
        "size": 26226,
        "lines": 374,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 374,
          "conditionals": 0,
          "loops": 0,
          "functions": 2,
          "score": 376
        },
        "issues": []
      },
      "LumbarDiscReplacement": {
        "path": "src\\pages\\expertise\\LumbarDiscReplacement.tsx",
        "name": "LumbarDiscReplacement",
        "size": 27018,
        "lines": 421,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 421,
          "conditionals": 0,
          "loops": 0,
          "functions": 3,
          "score": 424
        },
        "issues": []
      },
      "RoboticSpineSurgery": {
        "path": "src\\pages\\expertise\\RoboticSpineSurgery.tsx",
        "name": "RoboticSpineSurgery",
        "size": 29923,
        "lines": 436,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 436,
          "conditionals": 0,
          "loops": 0,
          "functions": 4,
          "score": 440
        },
        "issues": []
      },
      "Expertise": {
        "path": "src\\pages\\Expertise.tsx",
        "name": "Expertise",
        "size": 25680,
        "lines": 543,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect, useMemo } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/CTASection",
            "statement": "import CTASection from '@/components/CTASection'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/lib/seo",
            "statement": "import { generatePageSEO, generateMedicalProcedureStructuredData } from '@/lib/seo'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useMemo",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 543,
          "conditionals": 1,
          "loops": 8,
          "functions": 6,
          "score": 567
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (543 lines). Consider breaking it down."
          }
        ]
      },
      "Faq": {
        "path": "src\\pages\\Faq.tsx",
        "name": "Faq",
        "size": 39452,
        "lines": 452,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/Footer",
            "statement": "import Footer from '@/components/Footer'"
          },
          {
            "source": "@/components/Navbar",
            "statement": "import Navbar from '@/components/Navbar'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import {\r\n  Accordion,\r\n  AccordionContent,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n} from \"@/components/ui/accordion\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": true,
        "complexity": {
          "lines": 452,
          "conditionals": 1,
          "loops": 4,
          "functions": 11,
          "score": 473
        },
        "issues": []
      },
      "Gallery": {
        "path": "src\\pages\\Gallery.tsx",
        "name": "Gallery",
        "size": 11431,
        "lines": 294,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useState, useEffect, useCallback } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { X } from 'lucide-react'"
          },
          {
            "source": "@/components/Footer",
            "statement": "import Footer from '@/components/Footer'"
          },
          {
            "source": "@/components/Navbar",
            "statement": "import Navbar from '@/components/Navbar'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useState",
          "useEffect",
          "useCallback",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 294,
          "conditionals": 7,
          "loops": 2,
          "functions": 13,
          "score": 325
        },
        "issues": []
      },
      "CareCoordination": {
        "path": "src\\pages\\gp-resources\\CareCoordination.tsx",
        "name": "CareCoordination",
        "size": 33940,
        "lines": 464,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 464,
          "conditionals": 0,
          "loops": 1,
          "functions": 8,
          "score": 474
        },
        "issues": []
      },
      "Diagnostics": {
        "path": "src\\pages\\gp-resources\\Diagnostics.tsx",
        "name": "Diagnostics",
        "size": 31583,
        "lines": 495,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 495,
          "conditionals": 0,
          "loops": 1,
          "functions": 6,
          "score": 503
        },
        "issues": []
      },
      "Emergencies": {
        "path": "src\\pages\\gp-resources\\Emergencies.tsx",
        "name": "Emergencies",
        "size": 25102,
        "lines": 367,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { AlertTriangle, Phone, Clock, Stethoscope, Brain, Activity } from 'lucide-react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 367,
          "conditionals": 0,
          "loops": 1,
          "functions": 5,
          "score": 374
        },
        "issues": []
      },
      "ReferralProtocols": {
        "path": "src\\pages\\gp-resources\\ReferralProtocols.tsx",
        "name": "ReferralProtocols",
        "size": 20092,
        "lines": 323,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 323,
          "conditionals": 0,
          "loops": 1,
          "functions": 7,
          "score": 332
        },
        "issues": []
      },
      "GPResources": {
        "path": "src\\pages\\GPResources.tsx",
        "name": "GPResources",
        "size": 7309,
        "lines": 173,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 173,
          "conditionals": 0,
          "loops": 0,
          "functions": 4,
          "score": 177
        },
        "issues": []
      },
      "Index": {
        "path": "src\\pages\\Index.tsx",
        "name": "Index",
        "size": 45563,
        "lines": 777,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { ArrowRight } from 'lucide-react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/CTASection",
            "statement": "import CTASection from '@/components/CTASection'"
          },
          {
            "source": "@/components/HeroSection",
            "statement": "import HeroSection from '@/components/HeroSection'"
          },
          {
            "source": "@/components/IndependentReviewsSection",
            "statement": "import IndependentReviewsSection from '@/components/IndependentReviewsSection'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/lib/seo",
            "statement": "import { generatePageSEO, generateMedicalPracticeStructuredData, PRACTICE_INFO } from '@/lib/seo'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 777,
          "conditionals": 0,
          "loops": 0,
          "functions": 8,
          "score": 785
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (777 lines). Consider breaking it down."
          }
        ]
      },
      "LocationDetail": {
        "path": "src\\pages\\locations\\LocationDetail.tsx",
        "name": "LocationDetail",
        "size": 24350,
        "lines": 406,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect, useState } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { MapPin, Phone, Clock, Calendar, Car, Train, Bus, Mail } from 'lucide-react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { useParams, Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/Footer",
            "statement": "import Footer from '@/components/Footer'"
          },
          {
            "source": "@/components/Navbar",
            "statement": "import Navbar from '@/components/Navbar'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useState",
          "useParams",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 406,
          "conditionals": 8,
          "loops": 1,
          "functions": 4,
          "score": 428
        },
        "issues": []
      },
      "Locations": {
        "path": "src\\pages\\Locations.tsx",
        "name": "Locations",
        "size": 13356,
        "lines": 327,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "lucide-react",
            "statement": "import { MapPin, Phone, Clock } from 'lucide-react'"
          },
          {
            "source": "@/components/Footer",
            "statement": "import Footer from '@/components/Footer'"
          },
          {
            "source": "@/components/Navbar",
            "statement": "import Navbar from '@/components/Navbar'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 327,
          "conditionals": 0,
          "loops": 1,
          "functions": 5,
          "score": 334
        },
        "issues": []
      },
      "Medicolegal": {
        "path": "src\\pages\\Medicolegal.tsx",
        "name": "Medicolegal",
        "size": 40379,
        "lines": 637,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 637,
          "conditionals": 0,
          "loops": 8,
          "functions": 4,
          "score": 657
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (637 lines). Consider breaking it down."
          }
        ]
      },
      "NotFound": {
        "path": "src\\pages\\NotFound.tsx",
        "name": "NotFound",
        "size": 1444,
        "lines": 43,
        "imports": [
          {
            "source": "lucide-react",
            "statement": "import { Home } from 'lucide-react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link, useLocation } from 'react-router-dom'"
          },
          {
            "source": "react",
            "statement": "import { useEffect } from 'react'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useLocation",
          "useEffect"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 43,
          "conditionals": 0,
          "loops": 0,
          "functions": 4,
          "score": 47
        },
        "issues": [
          {
            "type": "MISSING_DISPLAY_NAME",
            "severity": "low",
            "message": "Component missing displayName for debugging"
          }
        ]
      },
      "AgeSpecificSpineRecommendations": {
        "path": "src\\pages\\patient-resources\\AgeSpecificSpineRecommendations.tsx",
        "name": "AgeSpecificSpineRecommendations",
        "size": 26687,
        "lines": 485,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent } from '@/components/ui/card'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nActivity,\r\n  FileText,\r\n  Brain,\r\n  CheckCircle2,\r\n  XCircle,\r\n  Clock\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 485,
          "conditionals": 0,
          "loops": 0,
          "functions": 5,
          "score": 490
        },
        "issues": []
      },
      "AssessmentTools": {
        "path": "src\\pages\\patient-resources\\AssessmentTools.tsx",
        "name": "AssessmentTools",
        "size": 19984,
        "lines": 385,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { FileUp, ClipboardCheck, History, Share2 } from 'lucide-react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 385,
          "conditionals": 0,
          "loops": 0,
          "functions": 4,
          "score": 389
        },
        "issues": []
      },
      "CervicalSpineExercises": {
        "path": "src\\pages\\patient-resources\\CervicalSpineExercises.tsx",
        "name": "CervicalSpineExercises",
        "size": 33025,
        "lines": 619,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent } from '@/components/ui/card'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nActivity,\r\n  FileText,\r\n  Brain,\r\n  CheckCircle2,\r\n  Clock\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 619,
          "conditionals": 0,
          "loops": 0,
          "functions": 4,
          "score": 623
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (619 lines). Consider breaking it down."
          }
        ]
      },
      "CervicalSpineInjury": {
        "path": "src\\pages\\patient-resources\\CervicalSpineInjury.tsx",
        "name": "CervicalSpineInjury",
        "size": 25257,
        "lines": 465,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent } from '@/components/ui/card'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nActivity,\r\n  FileText,\r\n  AlertTriangle,\r\n  CheckCircle2,\r\n  Car,\r\n  Laptop,\r\n  Dumbbell,\r\n  Clock\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 465,
          "conditionals": 0,
          "loops": 0,
          "functions": 5,
          "score": 470
        },
        "issues": []
      },
      "ConditionInformation": {
        "path": "src\\pages\\patient-resources\\ConditionInformation.tsx",
        "name": "ConditionInformation",
        "size": 12837,
        "lines": 269,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Search } from 'lucide-react'"
          },
          {
            "source": "@/components/Footer",
            "statement": "import Footer from '@/components/Footer'"
          },
          {
            "source": "@/components/Navbar",
            "statement": "import Navbar from '@/components/Navbar'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/input",
            "statement": "import { Input } from '@/components/ui/input'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 269,
          "conditionals": 0,
          "loops": 1,
          "functions": 8,
          "score": 279
        },
        "issues": []
      },
      "Arthrosis": {
        "path": "src\\pages\\patient-resources\\conditions\\Arthrosis.tsx",
        "name": "Arthrosis",
        "size": 68890,
        "lines": 1461,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/medical-conditions/shared/ConditionHeroSection",
            "statement": "import ConditionHeroSection from '@/components/medical-conditions/shared/ConditionHeroSection'"
          },
          {
            "source": "@/components/medical-conditions/shared/ConditionQuickFacts",
            "statement": "import ConditionQuickFacts from '@/components/medical-conditions/shared/ConditionQuickFacts'"
          },
          {
            "source": "@/components/medical-conditions/shared/ConditionOverviewSection",
            "statement": "import ConditionOverviewSection from '@/components/medical-conditions/shared/ConditionOverviewSection'"
          },
          {
            "source": "@/components/medical-conditions/arthrosis/ArthrosisTypesSection",
            "statement": "import ArthrosisTypesSection from '@/components/medical-conditions/arthrosis/ArthrosisTypesSection'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\r\n  Users,\r\n  TrendingUp,\r\n  MapPin,\r\n  CheckCircle\r\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 1461,
          "conditionals": 0,
          "loops": 0,
          "functions": 8,
          "score": 1469
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (1461 lines). Consider breaking it down."
          }
        ]
      },
      "Discopathy": {
        "path": "src\\pages\\patient-resources\\conditions\\Discopathy.tsx",
        "name": "Discopathy",
        "size": 2697,
        "lines": 65,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "@/components/medical-conditions/ConditionHero",
            "statement": "import ConditionHero from '@/components/medical-conditions/ConditionHero'"
          },
          {
            "source": "@/components/medical-conditions/ConditionOverview",
            "statement": "import ConditionOverview from '@/components/medical-conditions/ConditionOverview'"
          },
          {
            "source": "@/components/medical-conditions/DegenerationProcess",
            "statement": "import DegenerationProcess from '@/components/medical-conditions/DegenerationProcess'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/data/conditions/discopathy",
            "statement": "import { discopathyData } from '@/data/conditions/discopathy'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 65,
          "conditionals": 0,
          "loops": 0,
          "functions": 2,
          "score": 67
        },
        "issues": []
      },
      "FacetArthropathy": {
        "path": "src\\pages\\patient-resources\\conditions\\FacetArthropathy.tsx",
        "name": "FacetArthropathy",
        "size": 70628,
        "lines": 1478,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/medical-conditions/shared/ConditionHeroSection",
            "statement": "import ConditionHeroSection from '@/components/medical-conditions/shared/ConditionHeroSection'"
          },
          {
            "source": "@/components/medical-conditions/shared/ConditionQuickFacts",
            "statement": "import ConditionQuickFacts from '@/components/medical-conditions/shared/ConditionQuickFacts'"
          },
          {
            "source": "@/components/medical-conditions/shared/ConditionOverviewSection",
            "statement": "import ConditionOverviewSection from '@/components/medical-conditions/shared/ConditionOverviewSection'"
          },
          {
            "source": "@/components/medical-conditions/facet-arthropathy/FacetJointAnatomySection",
            "statement": "import FacetJointAnatomySection from '@/components/medical-conditions/facet-arthropathy/FacetJointAnatomySection'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\r\n  Users,\r\n  TrendingUp,\r\n  MapPin,\r\n  CheckCircle\r\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 1478,
          "conditionals": 0,
          "loops": 0,
          "functions": 7,
          "score": 1485
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (1478 lines). Consider breaking it down."
          }
        ]
      },
      "FacetArthropathyRefactored": {
        "path": "src\\pages\\patient-resources\\conditions\\FacetArthropathyRefactored.tsx",
        "name": "FacetArthropathyRefactored",
        "size": 17730,
        "lines": 378,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/medical-conditions",
            "statement": "import { ConditionHero, ConditionOverview, DegenerationProcess } from '@/components/medical-conditions'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/data/conditions/facet-arthropathy",
            "statement": "import { facetArthropathyData } from '@/data/conditions/facet-arthropathy'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nCalendar,\r\n  Download,\r\n  Phone,\r\n  ArrowRight,\r\n  Target,\r\n  Activity,\r\n  Shield,\r\n  Heart,\r\n  Brain,\r\n  Stethoscope,\r\n  Eye,\r\n  Layers,\r\n  Microscope,\r\n  Zap\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 378,
          "conditionals": 0,
          "loops": 6,
          "functions": 6,
          "score": 396
        },
        "issues": []
      },
      "HerniatedDisc": {
        "path": "src\\pages\\patient-resources\\conditions\\HerniatedDisc.tsx",
        "name": "HerniatedDisc",
        "size": 74769,
        "lines": 1604,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nAlertTriangle,\r\n  Activity,\r\n  Brain,\r\n  Heart,\r\n  Shield,\r\n  Target,\r\n  Clock,\r\n  CheckCircle,\r\n  ArrowRight,\r\n  Download,\r\n  Phone,\r\n  Calendar\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 1604,
          "conditionals": 0,
          "loops": 0,
          "functions": 6,
          "score": 1610
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (1604 lines). Consider breaking it down."
          }
        ]
      },
      "OccipitalNeuralgia": {
        "path": "src\\pages\\patient-resources\\conditions\\OccipitalNeuralgia.tsx",
        "name": "OccipitalNeuralgia",
        "size": 81737,
        "lines": 1664,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nAlertTriangle,\r\n  Activity,\r\n  Brain,\r\n  Heart,\r\n  Shield,\r\n  Target,\r\n  Clock,\r\n  CheckCircle,\r\n  ArrowRight,\r\n  Download,\r\n  Phone,\r\n  Calendar,\r\n  Users,\r\n  TrendingUp,\r\n  Zap,\r\n  Eye,\r\n  MapPin,\r\n  Gauge,\r\n  Network,\r\n  Disc,\r\n  Stethoscope,\r\n  Microscope,\r\n  Layers,\r\n  Settings,\r\n  Bone,\r\n  Move\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 1664,
          "conditionals": 0,
          "loops": 0,
          "functions": 8,
          "score": 1672
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (1664 lines). Consider breaking it down."
          }
        ]
      },
      "ParsDefects": {
        "path": "src\\pages\\patient-resources\\conditions\\ParsDefects.tsx",
        "name": "ParsDefects",
        "size": 82780,
        "lines": 1682,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nAlertTriangle,\r\n  Activity,\r\n  Brain,\r\n  Heart,\r\n  Shield,\r\n  Target,\r\n  Clock,\r\n  CheckCircle,\r\n  ArrowRight,\r\n  Download,\r\n  Phone,\r\n  Calendar,\r\n  Users,\r\n  TrendingUp,\r\n  Zap,\r\n  Eye,\r\n  MapPin,\r\n  Gauge,\r\n  Network,\r\n  Disc,\r\n  Stethoscope,\r\n  Microscope,\r\n  Layers,\r\n  Settings,\r\n  Bone,\r\n  Move\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 1682,
          "conditionals": 0,
          "loops": 0,
          "functions": 5,
          "score": 1687
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (1682 lines). Consider breaking it down."
          }
        ]
      },
      "PiriformisSyndrome": {
        "path": "src\\pages\\patient-resources\\conditions\\PiriformisSyndrome.tsx",
        "name": "PiriformisSyndrome",
        "size": 82787,
        "lines": 1678,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nAlertTriangle,\r\n  Activity,\r\n  Brain,\r\n  Heart,\r\n  Shield,\r\n  Target,\r\n  Clock,\r\n  CheckCircle,\r\n  ArrowRight,\r\n  Download,\r\n  Phone,\r\n  Calendar,\r\n  Users,\r\n  TrendingUp,\r\n  Zap,\r\n  Eye,\r\n  MapPin,\r\n  Gauge,\r\n  Network,\r\n  Disc,\r\n  Stethoscope,\r\n  Microscope,\r\n  Layers,\r\n  Settings,\r\n  Bone,\r\n  Move\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 1678,
          "conditionals": 0,
          "loops": 0,
          "functions": 11,
          "score": 1689
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (1678 lines). Consider breaking it down."
          }
        ]
      },
      "Radiculopathy": {
        "path": "src\\pages\\patient-resources\\conditions\\Radiculopathy.tsx",
        "name": "Radiculopathy",
        "size": 88697,
        "lines": 1842,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nAlertTriangle,\r\n  Activity,\r\n  Brain,\r\n  Heart,\r\n  Shield,\r\n  Target,\r\n  Clock,\r\n  CheckCircle,\r\n  ArrowRight,\r\n  Download,\r\n  Phone,\r\n  Calendar,\r\n  Users,\r\n  TrendingUp,\r\n  Zap,\r\n  Eye,\r\n  MapPin,\r\n  Gauge,\r\n  Network\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 1842,
          "conditionals": 0,
          "loops": 0,
          "functions": 7,
          "score": 1849
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (1842 lines). Consider breaking it down."
          }
        ]
      },
      "SacroiliacArthropathy": {
        "path": "src\\pages\\patient-resources\\conditions\\SacroiliacArthropathy.tsx",
        "name": "SacroiliacArthropathy",
        "size": 82593,
        "lines": 1681,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nAlertTriangle,\r\n  Activity,\r\n  Brain,\r\n  Heart,\r\n  Shield,\r\n  Target,\r\n  Clock,\r\n  CheckCircle,\r\n  ArrowRight,\r\n  Download,\r\n  Phone,\r\n  Calendar,\r\n  Users,\r\n  TrendingUp,\r\n  Zap,\r\n  Eye,\r\n  MapPin,\r\n  Gauge,\r\n  Network,\r\n  Disc,\r\n  Stethoscope,\r\n  Microscope,\r\n  Layers,\r\n  Settings,\r\n  Bone,\r\n  Move\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 1681,
          "conditionals": 0,
          "loops": 0,
          "functions": 16,
          "score": 1697
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (1681 lines). Consider breaking it down."
          }
        ]
      },
      "Sciatica": {
        "path": "src\\pages\\patient-resources\\conditions\\Sciatica.tsx",
        "name": "Sciatica",
        "size": 83306,
        "lines": 1742,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nAlertTriangle,\r\n  Activity,\r\n  Brain,\r\n  Heart,\r\n  Shield,\r\n  Target,\r\n  Clock,\r\n  CheckCircle,\r\n  ArrowRight,\r\n  Download,\r\n  Phone,\r\n  Calendar,\r\n  Users,\r\n  TrendingUp,\r\n  Zap,\r\n  Eye,\r\n  MapPin,\r\n  Gauge\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 1742,
          "conditionals": 0,
          "loops": 0,
          "functions": 6,
          "score": 1748
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (1742 lines). Consider breaking it down."
          }
        ]
      },
      "SpinalStenosis": {
        "path": "src\\pages\\patient-resources\\conditions\\SpinalStenosis.tsx",
        "name": "SpinalStenosis",
        "size": 84194,
        "lines": 1772,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nAlertTriangle,\r\n  Activity,\r\n  Brain,\r\n  Heart,\r\n  Shield,\r\n  Target,\r\n  Clock,\r\n  CheckCircle,\r\n  ArrowRight,\r\n  Download,\r\n  Phone,\r\n  Calendar,\r\n  Users,\r\n  TrendingUp,\r\n  Zap,\r\n  Eye\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 1772,
          "conditionals": 0,
          "loops": 0,
          "functions": 6,
          "score": 1778
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (1772 lines). Consider breaking it down."
          }
        ]
      },
      "Spondylolisthesis": {
        "path": "src\\pages\\patient-resources\\conditions\\Spondylolisthesis.tsx",
        "name": "Spondylolisthesis",
        "size": 86038,
        "lines": 1751,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nAlertTriangle,\r\n  Activity,\r\n  Brain,\r\n  Heart,\r\n  Shield,\r\n  Target,\r\n  Clock,\r\n  CheckCircle,\r\n  ArrowRight,\r\n  Download,\r\n  Phone,\r\n  Calendar,\r\n  Users,\r\n  TrendingUp,\r\n  Zap,\r\n  Eye,\r\n  MapPin,\r\n  Gauge,\r\n  Network,\r\n  Disc,\r\n  Stethoscope,\r\n  Microscope,\r\n  Layers,\r\n  Settings,\r\n  Bone,\r\n  Move,\r\n  Ruler\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": true,
        "complexity": {
          "lines": 1751,
          "conditionals": 0,
          "loops": 0,
          "functions": 5,
          "score": 1756
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (1751 lines). Consider breaking it down."
          }
        ]
      },
      "Spondylosis": {
        "path": "src\\pages\\patient-resources\\conditions\\Spondylosis.tsx",
        "name": "Spondylosis",
        "size": 80734,
        "lines": 1678,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nAlertTriangle,\r\n  Activity,\r\n  Brain,\r\n  Heart,\r\n  Shield,\r\n  Target,\r\n  Clock,\r\n  CheckCircle,\r\n  ArrowRight,\r\n  Download,\r\n  Phone,\r\n  Calendar,\r\n  Users,\r\n  TrendingUp,\r\n  Zap,\r\n  Eye,\r\n  MapPin,\r\n  Gauge,\r\n  Network,\r\n  Disc,\r\n  Stethoscope,\r\n  Microscope,\r\n  Layers,\r\n  Settings,\r\n  Bone,\r\n  Move\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 1678,
          "conditionals": 0,
          "loops": 0,
          "functions": 5,
          "score": 1683
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (1678 lines). Consider breaking it down."
          }
        ]
      },
      "ThoracicOutletSyndrome": {
        "path": "src\\pages\\patient-resources\\conditions\\ThoracicOutletSyndrome.tsx",
        "name": "ThoracicOutletSyndrome",
        "size": 82140,
        "lines": 1683,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/lib/utils",
            "statement": "import { cn } from '@/lib/utils'"
          },
          {
            "source": "@/contexts/DeviceContext",
            "statement": "import { useDeviceDetection } from '@/contexts/DeviceContext'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\r\n  AlertTriangle,\r\n  Activity,\r\n  Brain,\r\n  Heart,\r\n  Shield,\r\n  Target,\r\n  Clock,\r\n  CheckCircle,\r\n  ArrowRight,\r\n  Download,\r\n  Phone,\r\n  Calendar,\r\n  Users,\r\n  TrendingUp,\r\n  Zap,\r\n  Eye,\r\n  MapPin,\r\n  Gauge,\r\n  Network,\r\n  Disc,\r\n  Stethoscope,\r\n  Microscope,\r\n  Layers,\r\n  Settings,\r\n  Bone,\r\n  Move,\r\n  Navigation\r\n} from \"lucide-react\""
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useDeviceDetection",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 1683,
          "conditionals": 0,
          "loops": 0,
          "functions": 6,
          "score": 1689
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (1683 lines). Consider breaking it down."
          }
        ]
      },
      "ExerciseLibrary": {
        "path": "src\\pages\\patient-resources\\ExerciseLibrary.tsx",
        "name": "ExerciseLibrary",
        "size": 26886,
        "lines": 586,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect, useState, useMemo } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Search, Filter, Info, ArrowRight, CheckCircle2 } from 'lucide-react'"
          },
          {
            "source": "@/components/ErrorBoundary",
            "statement": "import ErrorBoundary from '@/components/ErrorBoundary'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/badge",
            "statement": "import { Badge } from '@/components/ui/badge'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/input",
            "statement": "import { Input } from '@/components/ui/input'"
          },
          {
            "source": "@/components/ui/select",
            "statement": "import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "@/components/ui/dialog",
            "statement": "import {\r\nDialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n  DialogFooter,\r\n  DialogClose\r\n} from \"@/components/ui/dialog\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useState",
          "useMemo",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 586,
          "conditionals": 10,
          "loops": 10,
          "functions": 22,
          "score": 648
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (586 lines). Consider breaking it down."
          }
        ]
      },
      "ExercisePainMedRisks": {
        "path": "src\\pages\\patient-resources\\ExercisePainMedRisks.tsx",
        "name": "ExercisePainMedRisks",
        "size": 25938,
        "lines": 470,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent } from '@/components/ui/card'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nActivity,\r\n  FileText,\r\n  Brain,\r\n  AlertTriangle,\r\n  CheckCircle2,\r\n  Clock\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 470,
          "conditionals": 0,
          "loops": 0,
          "functions": 4,
          "score": 474
        },
        "issues": []
      },
      "IndividualSpineHealthProgramme": {
        "path": "src\\pages\\patient-resources\\IndividualSpineHealthProgramme.tsx",
        "name": "IndividualSpineHealthProgramme",
        "size": 16832,
        "lines": 330,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/Footer",
            "statement": "import Footer from '@/components/Footer'"
          },
          {
            "source": "@/components/Navbar",
            "statement": "import Navbar from '@/components/Navbar'"
          },
          {
            "source": "@/components/SafeImage",
            "statement": "import SafeImage from '@/components/SafeImage'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/input",
            "statement": "import { Input } from '@/components/ui/input'"
          },
          {
            "source": "@/components/ui/label",
            "statement": "import { Label } from '@/components/ui/label'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\r\nBrain,\r\n  Activity,\r\n  Stethoscope,\r\n  ClipboardList,\r\n  Target,\r\n  Calendar,\r\n  Share2,\r\n  FileUp,\r\n  ClipboardCheck,\r\n  History,\r\n  LineChart,\r\n  BarChart\r\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 330,
          "conditionals": 0,
          "loops": 0,
          "functions": 4,
          "score": 334
        },
        "issues": []
      },
      "LifestyleModifications": {
        "path": "src\\pages\\patient-resources\\LifestyleModifications.tsx",
        "name": "LifestyleModifications",
        "size": 53538,
        "lines": 869,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 869,
          "conditionals": 0,
          "loops": 0,
          "functions": 6,
          "score": 875
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (869 lines). Consider breaking it down."
          }
        ]
      },
      "PatientDashboard": {
        "path": "src\\pages\\patient-resources\\PatientDashboard.tsx",
        "name": "PatientDashboard",
        "size": 26533,
        "lines": 508,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { LineChart, BarChart, Activity, Target, Calendar, ClipboardList, Share2 } from 'lucide-react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/Footer",
            "statement": "import Footer from '@/components/Footer'"
          },
          {
            "source": "@/components/Navbar",
            "statement": "import Navbar from '@/components/Navbar'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/input",
            "statement": "import { Input } from '@/components/ui/input'"
          },
          {
            "source": "@/components/ui/label",
            "statement": "import { Label } from '@/components/ui/label'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 508,
          "conditionals": 0,
          "loops": 0,
          "functions": 4,
          "score": 512
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (508 lines). Consider breaking it down."
          }
        ]
      },
      "SpineAndBrainHealth": {
        "path": "src\\pages\\patient-resources\\SpineAndBrainHealth.tsx",
        "name": "SpineAndBrainHealth",
        "size": 18225,
        "lines": 331,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Brain, FileText, Activity, Clock, CheckCircle2 } from 'lucide-react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent } from '@/components/ui/card'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 331,
          "conditionals": 1,
          "loops": 1,
          "functions": 6,
          "score": 341
        },
        "issues": []
      },
      "SpineConditionsLibrary": {
        "path": "src\\pages\\patient-resources\\SpineConditionsLibrary.tsx",
        "name": "SpineConditionsLibrary",
        "size": 44563,
        "lines": 774,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/accordion",
            "statement": "import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 774,
          "conditionals": 0,
          "loops": 0,
          "functions": 6,
          "score": 780
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (774 lines). Consider breaking it down."
          }
        ]
      },
      "SpineHealthApp": {
        "path": "src\\pages\\patient-resources\\SpineHealthApp.tsx",
        "name": "SpineHealthApp",
        "size": 19233,
        "lines": 372,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { Brain, Activity, Stethoscope, ClipboardList, Target } from 'lucide-react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/Footer",
            "statement": "import Footer from '@/components/Footer'"
          },
          {
            "source": "@/components/Navbar",
            "statement": "import Navbar from '@/components/Navbar'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'"
          },
          {
            "source": "@/components/ui/tabs",
            "statement": "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 372,
          "conditionals": 0,
          "loops": 0,
          "functions": 4,
          "score": 376
        },
        "issues": []
      },
      "SpineSafeExercises": {
        "path": "src\\pages\\patient-resources\\SpineSafeExercises.tsx",
        "name": "SpineSafeExercises",
        "size": 33283,
        "lines": 630,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent } from '@/components/ui/card'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nActivity,\r\n  FileText,\r\n  Brain,\r\n  CheckCircle2,\r\n  Clock\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 630,
          "conditionals": 0,
          "loops": 0,
          "functions": 4,
          "score": 634
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (630 lines). Consider breaking it down."
          }
        ]
      },
      "YouthfulSpine": {
        "path": "src\\pages\\patient-resources\\YouthfulSpine.tsx",
        "name": "YouthfulSpine",
        "size": 35035,
        "lines": 562,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/components/ui/card",
            "statement": "import { Card, CardContent } from '@/components/ui/card'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "lucide-react",
            "statement": "import {\nActivity,\r\n  FileText,\r\n  Brain,\r\n  CheckCircle2,\r\n  Clock\n} from \"lucide-react\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 562,
          "conditionals": 0,
          "loops": 0,
          "functions": 9,
          "score": 571
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (562 lines). Consider breaking it down."
          }
        ]
      },
      "PatientResources": {
        "path": "src\\pages\\PatientResources.tsx",
        "name": "PatientResources",
        "size": 24998,
        "lines": 511,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "lucide-react",
            "statement": "import { FileText, Calendar, Info, HelpCircle, FileDown, Clock } from 'lucide-react'"
          },
          {
            "source": "react-router-dom",
            "statement": "import { Link } from 'react-router-dom'"
          },
          {
            "source": "@/components/PageHeader",
            "statement": "import PageHeader from '@/components/PageHeader'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": true,
        "hasTypes": false,
        "complexity": {
          "lines": 511,
          "conditionals": 0,
          "loops": 3,
          "functions": 8,
          "score": 525
        },
        "issues": [
          {
            "type": "LARGE_COMPONENT",
            "severity": "high",
            "message": "Component is very large (511 lines). Consider breaking it down."
          }
        ]
      },
      "PrivacyPolicy": {
        "path": "src\\pages\\PrivacyPolicy.tsx",
        "name": "PrivacyPolicy",
        "size": 14199,
        "lines": 263,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 263,
          "conditionals": 0,
          "loops": 0,
          "functions": 2,
          "score": 265
        },
        "issues": []
      },
      "Specialties": {
        "path": "src\\pages\\Specialties.tsx",
        "name": "Specialties",
        "size": 13242,
        "lines": 286,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect, useCallback, useState } from 'react'"
          },
          {
            "source": "@/components/ProcedureCard",
            "statement": "import ProcedureCard from '@/components/ProcedureCard'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          },
          {
            "source": "@/components/ui/button",
            "statement": "import { Button } from '@/components/ui/button'"
          },
          {
            "source": "@/types/procedures",
            "statement": "import { ProcedureProps } from '@/types/procedures'"
          },
          {
            "source": "@/components/ui/slider",
            "statement": "import { Slider } from '@/components/ui/slider'"
          },
          {
            "source": "@/contexts/LanguageContext",
            "statement": "import { useLanguage } from '@/contexts/LanguageContext'"
          },
          {
            "source": "@/locales/en",
            "statement": "import en from '@/locales/en'"
          },
          {
            "source": "@/components/ui/select",
            "statement": "import {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\""
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect",
          "useCallback",
          "useState",
          "useLanguage"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 286,
          "conditionals": 2,
          "loops": 3,
          "functions": 11,
          "score": 307
        },
        "issues": []
      },
      "TermsConditions": {
        "path": "src\\pages\\TermsConditions.tsx",
        "name": "TermsConditions",
        "size": 7749,
        "lines": 145,
        "imports": [
          {
            "source": "react",
            "statement": "import React, { useEffect } from 'react'"
          },
          {
            "source": "@/components/Footer",
            "statement": "import Footer from '@/components/Footer'"
          },
          {
            "source": "@/components/Navbar",
            "statement": "import Navbar from '@/components/Navbar'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [
          "useEffect"
        ],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 145,
          "conditionals": 0,
          "loops": 0,
          "functions": 2,
          "score": 147
        },
        "issues": []
      },
      "TestImages": {
        "path": "src\\pages\\TestImages.tsx",
        "name": "TestImages",
        "size": 538,
        "lines": 19,
        "imports": [
          {
            "source": "react",
            "statement": "import React from 'react'"
          },
          {
            "source": "@/components/StandardPageLayout",
            "statement": "import StandardPageLayout from '@/components/StandardPageLayout'"
          }
        ],
        "exports": [],
        "props": [],
        "hooks": [],
        "isReactComponent": true,
        "hasTypeScript": true,
        "hasInterfaces": false,
        "hasTypes": false,
        "complexity": {
          "lines": 19,
          "conditionals": 0,
          "loops": 0,
          "functions": 1,
          "score": 20
        },
        "issues": []
      }
    },
    "pages": {},
    "hooks": {},
    "contexts": {},
    "services": {},
    "utilities": {},
    "types": {},
    "routes": {},
    "configurations": {},
    "dependencies": {},
    "imports": {},
    "exports": {},
    "issues": [
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ErrorBoundary.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\layout\\LayoutVariants.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\layout\\StandardSection.tsx"
      },
      {
        "type": "MISSING_DISPLAY_NAME",
        "severity": "low",
        "message": "Component missing displayName for debugging",
        "file": "src\\components\\medical-conditions\\arthrosis\\ArthrosisTypesSection.tsx"
      },
      {
        "type": "MISSING_DISPLAY_NAME",
        "severity": "low",
        "message": "Component missing displayName for debugging",
        "file": "src\\components\\medical-conditions\\facet-arthropathy\\FacetJointAnatomySection.tsx"
      },
      {
        "type": "MISSING_DISPLAY_NAME",
        "severity": "low",
        "message": "Component missing displayName for debugging",
        "file": "src\\components\\medical-conditions\\shared\\ConditionHeroSection.tsx"
      },
      {
        "type": "MISSING_DISPLAY_NAME",
        "severity": "low",
        "message": "Component missing displayName for debugging",
        "file": "src\\components\\medical-conditions\\shared\\ConditionOverviewSection.tsx"
      },
      {
        "type": "MISSING_DISPLAY_NAME",
        "severity": "low",
        "message": "Component missing displayName for debugging",
        "file": "src\\components\\medical-conditions\\shared\\ConditionQuickFacts.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\SafeImage.tsx"
      },
      {
        "type": "MISSING_DISPLAY_NAME",
        "severity": "low",
        "message": "Component missing displayName for debugging",
        "file": "src\\components\\SafeImage.tsx"
      },
      {
        "type": "MISSING_DISPLAY_NAME",
        "severity": "low",
        "message": "Component missing displayName for debugging",
        "file": "src\\components\\ScreenReaderAnnouncer.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\alert-dialog.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\badge.tsx"
      },
      {
        "type": "MISSING_DISPLAY_NAME",
        "severity": "low",
        "message": "Component missing displayName for debugging",
        "file": "src\\components\\ui\\badge.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\breadcrumb.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\calendar.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\carousel.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\chart.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\command.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\context-menu.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\dialog.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\drawer.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\dropdown-menu.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\form.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\menubar.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\pagination.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\resizable.tsx"
      },
      {
        "type": "MISSING_DISPLAY_NAME",
        "severity": "low",
        "message": "Component missing displayName for debugging",
        "file": "src\\components\\ui\\resizable.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\sheet.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\skeleton.tsx"
      },
      {
        "type": "MISSING_DISPLAY_NAME",
        "severity": "low",
        "message": "Component missing displayName for debugging",
        "file": "src\\components\\ui\\skeleton.tsx"
      },
      {
        "type": "MISSING_PROPS_INTERFACE",
        "severity": "medium",
        "message": "Component uses props but has no TypeScript interface defined",
        "file": "src\\components\\ui\\sonner.tsx"
      },
      {
        "type": "MISSING_DISPLAY_NAME",
        "severity": "low",
        "message": "Component missing displayName for debugging",
        "file": "src\\components\\ui\\sonner.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (891 lines). Consider breaking it down.",
        "file": "src\\pages\\AppointmentBooking.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (824 lines). Consider breaking it down.",
        "file": "src\\pages\\Appointments.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (760 lines). Consider breaking it down.",
        "file": "src\\pages\\Contact.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (543 lines). Consider breaking it down.",
        "file": "src\\pages\\Expertise.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (777 lines). Consider breaking it down.",
        "file": "src\\pages\\Index.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (618 lines). Consider breaking it down.",
        "file": "src\\pages\\locations\\bundoora\\index.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (644 lines). Consider breaking it down.",
        "file": "src\\pages\\locations\\dandenong\\index.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (865 lines). Consider breaking it down.",
        "file": "src\\pages\\locations\\frankston\\index.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (733 lines). Consider breaking it down.",
        "file": "src\\pages\\locations\\heidelberg\\index.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (623 lines). Consider breaking it down.",
        "file": "src\\pages\\locations\\langwarrin\\index.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (719 lines). Consider breaking it down.",
        "file": "src\\pages\\locations\\moonee-ponds\\index.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (710 lines). Consider breaking it down.",
        "file": "src\\pages\\locations\\mornington\\index.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (731 lines). Consider breaking it down.",
        "file": "src\\pages\\locations\\sunbury\\index.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (903 lines). Consider breaking it down.",
        "file": "src\\pages\\locations\\surrey-hills\\index.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (607 lines). Consider breaking it down.",
        "file": "src\\pages\\locations\\wantirna\\index.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (731 lines). Consider breaking it down.",
        "file": "src\\pages\\locations\\werribee\\index.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (637 lines). Consider breaking it down.",
        "file": "src\\pages\\Medicolegal.tsx"
      },
      {
        "type": "MISSING_DISPLAY_NAME",
        "severity": "low",
        "message": "Component missing displayName for debugging",
        "file": "src\\pages\\NotFound.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (619 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\CervicalSpineExercises.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (1461 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\conditions\\Arthrosis.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (1478 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\conditions\\FacetArthropathy.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (1604 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\conditions\\HerniatedDisc.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (1664 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\conditions\\OccipitalNeuralgia.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (1682 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\conditions\\ParsDefects.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (1678 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\conditions\\PiriformisSyndrome.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (1842 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\conditions\\Radiculopathy.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (1681 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\conditions\\SacroiliacArthropathy.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (1742 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\conditions\\Sciatica.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (1772 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\conditions\\SpinalStenosis.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (1751 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\conditions\\Spondylolisthesis.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (1678 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\conditions\\Spondylosis.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (1683 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\conditions\\ThoracicOutletSyndrome.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (586 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\ExerciseLibrary.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (869 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\LifestyleModifications.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (508 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\PatientDashboard.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (774 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\SpineConditionsLibrary.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (630 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\SpineSafeExercises.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (562 lines). Consider breaking it down.",
        "file": "src\\pages\\patient-resources\\YouthfulSpine.tsx"
      },
      {
        "type": "LARGE_COMPONENT",
        "severity": "high",
        "message": "Component is very large (511 lines). Consider breaking it down.",
        "file": "src\\pages\\PatientResources.tsx"
      }
    ],
    "recommendations": [
      {
        "category": "Architecture",
        "priority": "high",
        "title": "Component Size Optimization",
        "description": "Several components exceed 500 lines and should be broken down into smaller, reusable components"
      }
    ],
    "metrics": {
      "namingConventions": {
        "components": {
          "pascalCase": 0,
          "camelCase": 0,
          "kebabCase": 0,
          "other": 0
        },
        "files": {
          "camelCase": 0,
          "kebabCase": 0,
          "pascalCase": 0,
          "other": 0
        },
        "directories": {
          "camelCase": 0,
          "kebabCase": 0,
          "other": 0
        }
      },
      "totalComponents": 137,
      "totalPages": 0,
      "totalIssues": 72,
      "averageComponentSize": 374.1094890510949
    }
  },
  "timestamp": "2025-06-20T19:58:46.543Z",
  "summary": {
    "totalFiles": 137,
    "criticalIssues": 38,
    "mediumIssues": 22,
    "lowIssues": 12,
    "recommendations": 1
  }
}